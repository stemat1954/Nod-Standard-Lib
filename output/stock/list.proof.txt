page list
{
	type <t>node1  @41616|list(337,13) --internal
	 from ("t")-> (unmatched)
	 from ("node1")-> type node1  @45456|list(22,6)
	 viable = no
	{
		method begin  @48128|list(342,17) --external
		 viable = no
		{

			given
			{
				object io  @34672|list(342,17) --internal
				 type: (direct)-> type <t>node1  @41616|list(337,13)

				proxy ~base  @38992|list(342,17) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @27168|list(344,5)
				 type: ("node1")-> type node1  @45456|list(22,6)
				 permission: [upd]
				TRANSLATE* --provisional --base
				 lead: ("io")-> object io  @34672|list(342,17)
				 method: (direct)-> method $18<7>( as_base<node1> )  @35856|$appendix(,)
				 result: (direct)-> proxy (anon)  @27168|list(344,5)
				CALL* --provisional
				 lead: (direct)-> blank (anon)  @33776|list(,)
				 method: ("begin")-> (unmatched)
				TRANSLATE* --provisional --base
				 lead: ("io")-> object io  @34672|list(342,17)
				 method: ("as_base<t>")-> method as_base<t>  @13728|object(57,3)
				JOIN* --provisional
				 left: ("~base")-> proxy ~base  @38992|list(342,17)
				 right: (direct)-> blank (anon)  @46288|list(,)
			}
		}
	}

	nom type link1  @11920|list(19,10) --external
	 viable = yes
	 equivalent: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)

	type list  @43536|list(99,6) --external
	 from (direct)-> type $8<7><9>( serial_access<node1><list_cursor> )  @56208|$appendix(,)
	 viable = yes
	{
		method begin  @45632|list(167,3) --external
		 viable = yes
		{

			given
			{
				object io  @00000|list(167,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @28688|list(169,6)
				 type: (direct)-> type $8<7><9>( serial_access<node1><list_cursor> )  @56208|$appendix(,)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @00000|list(167,3)
				 method: (direct)-> method $18<$8<7><9>>( as_base<serial_access<node1><list_cursor>> )  @42928|$appendix(,)
				 result: (direct)-> proxy (anon)  @28688|list(169,6)
				CALL --initial, fundamental
				 lead: (direct)-> proxy (anon)  @28688|list(169,6)
				 method: ("begin")-> method begin  @05968|$appendix(,)
			}
		}

		method begin  @47712|list(172,3) --external
		 viable = yes
		{

			given
			{
				object io  @01280|list(172,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object other  @01600|list(172,3) --internal
				 type: ("list")-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @63936|list(174,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("other.first")-> object first  @33280|list(327,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @63936|list(174,10)
				IF
				 condition: (direct)-> object (anon)  @63936|list(174,10)
				{
					true branch: BLOCK --domain
					{
						CALL --fundamental
						 lead: ("io.first")-> object first  @33280|list(327,3)
						 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
						 input: ("other.first")-> object first  @33280|list(327,3)
						CALL --fundamental
						 lead: ("io.last")-> object last  @40640|list(328,3)
						 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
						 input: ("other.last")-> object last  @40640|list(328,3)
						CALL --terminal, fundamental
						 lead: ("other.current")-> object current  @35840|list(329,3)
						 method: ("recycle")-> method recycle  @22464|object(60,3)
					}
				}
			}
		}

		method get_current  @46880|list(198,3) --external
		 viable = yes
		{

			given
			{
				object io  @60736|list(198,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object link1  @58496|list(198,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @59776|list(200,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @59776|list(200,10)
				IF
				 condition: (direct)-> object (anon)  @59776|list(200,10)
				{
					true branch: CALL --fundamental
					 lead: ("given\link1")-> object link1  @58496|list(198,3)
					 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
					 input: ("io.current")-> object current  @35840|list(329,3)
				}
			}
		}

		method get_first  @51456|list(188,3) --external
		 viable = yes
		{

			given
			{
				object io  @03840|list(188,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object link1  @57536|list(188,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @00320|list(190,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.first")-> object first  @33280|list(327,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @00320|list(190,10)
				IF
				 condition: (direct)-> object (anon)  @00320|list(190,10)
				{
					true branch: CALL --fundamental
					 lead: ("given\link1")-> object link1  @57536|list(188,3)
					 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
					 input: ("io.first")-> object first  @33280|list(327,3)
				}
			}
		}

		method get_last  @46464|list(193,3) --external
		 viable = yes
		{

			given
			{
				object io  @64576|list(193,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object link1  @57856|list(193,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @58176|list(195,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.last")-> object last  @40640|list(328,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @58176|list(195,10)
				IF
				 condition: (direct)-> object (anon)  @58176|list(195,10)
				{
					true branch: CALL --fundamental
					 lead: ("given\link1")-> object link1  @57856|list(193,3)
					 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
					 input: ("io.last")-> object last  @40640|list(328,3)
				}
			}
		}

		method get_next  @51040|list(203,3) --external
		 viable = yes
		{

			given
			{
				object io  @60096|list(203,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object link1  @60416|list(203,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @61056|list(205,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @61056|list(205,10)
				IF
				 condition: (direct)-> object (anon)  @61056|list(205,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @26864|list(205,50)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @26864|list(205,50)
						CALL
						 lead: (direct)-> proxy (anon)  @26864|list(205,50)
						 method: ("get_next")-> method get_next  @42304|list(34,3)
						 output: ("given\link1")-> object link1  @60416|list(203,3)
					}
				}
			}
		}

		method go_first  @49376|list(214,3) --external
		 viable = yes
		{

			given
			{
				object io  @39792|list(214,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @27312|list(216,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.first")-> object first  @33280|list(327,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @27312|list(216,10)
				IF
				 condition: (direct)-> object (anon)  @27312|list(216,10)
				{
					true branch: BLOCK --domain
					{
						CALL --terminal, fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: ("recycle")-> method recycle  @22464|object(60,3)
						CALL --fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
						 input: ("io.first")-> object first  @33280|list(327,3)
					}
				}
			}
		}

		method go_front  @48544|list(209,3) --external
		 viable = yes
		{

			given
			{
				object io  @61376|list(209,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				CALL --terminal, fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("recycle")-> method recycle  @22464|object(60,3)
			}
		}

		method go_here  @50208|list(237,3) --external
		 viable = yes
		{

			given
			{
				object io  @32432|list(237,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object link1  @31152|list(237,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				CALL --terminal, fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("recycle")-> method recycle  @22464|object(60,3)
				CALL --fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
				 input: ("given\link1")-> object link1  @31152|list(237,3)
			}
		}

		method go_last  @49792|list(219,3) --external
		 viable = yes
		{

			given
			{
				object io  @32752|list(219,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @37872|list(221,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.last")-> object last  @40640|list(328,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @37872|list(221,10)
				IF
				 condition: (direct)-> object (anon)  @37872|list(221,10)
				{
					true branch: BLOCK --domain
					{
						CALL --terminal, fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: ("recycle")-> method recycle  @22464|object(60,3)
						CALL --fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
						 input: ("io.last")-> object last  @40640|list(328,3)
					}
				}
			}
		}

		method go_next  @50624|list(224,3) --external
		 viable = yes
		{

			given
			{
				object io  @38512|list(224,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @28592|list(226,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("is_null?")-> method is_null?  @19968|object(36,3)
				 output: (direct)-> object (anon)  @28592|list(226,10)
				IF
				 condition: (direct)-> object (anon)  @28592|list(226,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object (anon)  @41072|list(228,11)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("io.first")-> object first  @33280|list(327,3)
						 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
						 output: (direct)-> object (anon)  @41072|list(228,11)
						IF
						 condition: (direct)-> object (anon)  @41072|list(228,11)
						{
							true branch: BLOCK --domain
							{
								CALL --terminal, fundamental
								 lead: ("io.current")-> object current  @35840|list(329,3)
								 method: ("recycle")-> method recycle  @22464|object(60,3)
								CALL --fundamental
								 lead: ("io.current")-> object current  @35840|list(329,3)
								 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
								 input: ("io.first")-> object first  @33280|list(327,3)
							}
						}
					}
					false branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @30512|list(232,15)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @30512|list(232,15)
						MAKE
						 object: (direct)-> object nl  @33392|list(232,34)
						 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
						CALL
						 lead: (direct)-> proxy (anon)  @30512|list(232,15)
						 method: ("get_next")-> method get_next  @42304|list(34,3)
						 output: (direct)-> object nl  @33392|list(232,34)
						MAKE
						 object: (direct)-> object (anon)  @30832|list(233,11)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("nl")-> object nl  @33392|list(232,34)
						 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
						 output: (direct)-> object (anon)  @30832|list(233,11)
						IF
						 condition: (direct)-> object (anon)  @30832|list(233,11)
						{
							true branch: BLOCK --domain
							{
								CALL --terminal, fundamental
								 lead: ("io.current")-> object current  @35840|list(329,3)
								 method: ("recycle")-> method recycle  @22464|object(60,3)
								CALL --fundamental
								 lead: ("io.current")-> object current  @35840|list(329,3)
								 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
								 input: ("nl")-> object nl  @33392|list(232,34)
							}
						}
					}
				}
			}
		}

		method insert  @46048|list(242,3) --external
		 viable = yes
		{

			given
			{
				object io  @39472|list(242,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object link1  @31472|list(242,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @24736|list(244,15)
				 type: ("node1")-> type node1  @45456|list(22,6)
				 permission: [upd]
				CALL --fundamental
				 lead: ("given\link1")-> object link1  @31472|list(242,3)
				 method: ("deref")-> method deref  @15536|$appendix(,)
				 result: (direct)-> proxy (anon)  @24736|list(244,15)
				CALL
				 lead: (direct)-> proxy (anon)  @24736|list(244,15)
				 method: ("unlink")-> method unlink  @43552|list(44,3)
				MAKE
				 object: (direct)-> object (anon)  @36592|list(245,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @36592|list(245,10)
				IF
				 condition: (direct)-> object (anon)  @36592|list(245,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @29600|list(248,15)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @29600|list(248,15)
						MAKE
						 object: (direct)-> object before  @37232|list(248,39)
						 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
						CALL
						 lead: (direct)-> proxy (anon)  @29600|list(248,15)
						 method: ("get_next")-> method get_next  @42304|list(34,3)
						 output: (direct)-> object before  @37232|list(248,39)
						CALL
						 lead: (direct)-> proxy (anon)  @29600|list(248,15)
						 method: ("set_next")-> method set_next  @42720|list(39,3)
						 input: ("given\link1")-> object link1  @31472|list(242,3)
						MAKE
						 object: (direct)-> object (anon)  @28912|list(249,11)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("before")-> object before  @37232|list(248,39)
						 method: ("is_null?")-> method is_null?  @19968|object(36,3)
						 output: (direct)-> object (anon)  @28912|list(249,11)
						IF
						 condition: (direct)-> object (anon)  @28912|list(249,11)
						{
							true branch: BLOCK --domain
							{
								CALL --terminal, fundamental
								 lead: ("io.last")-> object last  @40640|list(328,3)
								 method: ("recycle")-> method recycle  @22464|object(60,3)
								CALL --fundamental
								 lead: ("io.last")-> object last  @40640|list(328,3)
								 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
								 input: ("given\link1")-> object link1  @31472|list(242,3)
							}
							false branch: BLOCK --domain
							{
								MAKE
								 proxy: (direct)-> proxy (anon)  @29296|list(252,17)
								 type: ("node1")-> type node1  @45456|list(22,6)
								 permission: [upd]
								CALL --fundamental
								 lead: ("given\link1")-> object link1  @31472|list(242,3)
								 method: ("deref")-> method deref  @15536|$appendix(,)
								 result: (direct)-> proxy (anon)  @29296|list(252,17)
								CALL
								 lead: (direct)-> proxy (anon)  @29296|list(252,17)
								 method: ("set_next")-> method set_next  @42720|list(39,3)
								 input: ("before")-> object before  @37232|list(248,39)
							}
						}
					}
					false branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object (anon)  @38192|list(254,15)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("io.first")-> object first  @33280|list(327,3)
						 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
						 output: (direct)-> object (anon)  @38192|list(254,15)
						IF
						 condition: (direct)-> object (anon)  @38192|list(254,15)
						{
							true branch: BLOCK --domain
							{
								MAKE
								 proxy: (direct)-> proxy (anon)  @25040|list(257,16)
								 type: ("node1")-> type node1  @45456|list(22,6)
								 permission: [upd]
								CALL --fundamental
								 lead: ("given\link1")-> object link1  @31472|list(242,3)
								 method: ("deref")-> method deref  @15536|$appendix(,)
								 result: (direct)-> proxy (anon)  @25040|list(257,16)
								CALL
								 lead: (direct)-> proxy (anon)  @25040|list(257,16)
								 method: ("set_next")-> method set_next  @42720|list(39,3)
								 input: ("io.first")-> object first  @33280|list(327,3)
								CALL --terminal, fundamental
								 lead: ("io.first")-> object first  @33280|list(327,3)
								 method: ("recycle")-> method recycle  @22464|object(60,3)
								CALL --fundamental
								 lead: ("io.first")-> object first  @33280|list(327,3)
								 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
								 input: ("given\link1")-> object link1  @31472|list(242,3)
							}
							false branch: BLOCK --domain
							{
								CALL --fundamental
								 lead: ("io.first")-> object first  @33280|list(327,3)
								 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
								 input: ("given\link1")-> object link1  @31472|list(242,3)
								CALL --fundamental
								 lead: ("io.last")-> object last  @40640|list(328,3)
								 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
								 input: ("given\link1")-> object link1  @31472|list(242,3)
							}
						}
					}
				}
			}
		}

		method is_empty?  @48960|list(183,3) --external
		 viable = yes
		{

			given
			{
				object io  @61696|list(183,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object yes  @02560|list(183,3) --internal
				 type: ("bool")-> type bool  @08256|bool(5,6)
			}

			BLOCK --domain
			{
				CALL --fundamental
				 lead: ("io.first")-> object first  @33280|list(327,3)
				 method: ("is_null?")-> method is_null?  @19968|object(36,3)
				 output: ("yes")-> object yes  @02560|list(183,3)
			}
		}

		method remove_next  @47296|list(268,3) --external
		 viable = yes
		{

			given
			{
				object io  @30192|list(268,3) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @33712|list(270,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.current")-> object current  @35840|list(329,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @33712|list(270,10)
				IF
				 condition: (direct)-> object (anon)  @33712|list(270,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @26560|list(273,15)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("io.current")-> object current  @35840|list(329,3)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @26560|list(273,15)
						MAKE
						 object: (direct)-> object next  @33072|list(273,34)
						 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
						CALL
						 lead: (direct)-> proxy (anon)  @26560|list(273,15)
						 method: ("get_next")-> method get_next  @42304|list(34,3)
						 output: (direct)-> object next  @33072|list(273,34)
						MAKE
						 object: (direct)-> object (anon)  @27632|list(274,11)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("next")-> object next  @33072|list(273,34)
						 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
						 output: (direct)-> object (anon)  @27632|list(274,11)
						IF
						 condition: (direct)-> object (anon)  @27632|list(274,11)
						{
							true branch: BLOCK --domain
							{
								MAKE
								 proxy: (direct)-> proxy (anon)  @25344|list(276,10)
								 type: ("node1")-> type node1  @45456|list(22,6)
								 permission: [upd]
								CALL --fundamental
								 lead: ("next")-> object next  @33072|list(273,34)
								 method: ("deref")-> method deref  @15536|$appendix(,)
								 result: (direct)-> proxy (anon)  @25344|list(276,10)
								MAKE
								 object: (direct)-> object next_next  @31792|list(276,34)
								 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
								CALL
								 lead: (direct)-> proxy (anon)  @25344|list(276,10)
								 method: ("get_next")-> method get_next  @42304|list(34,3)
								 output: (direct)-> object next_next  @31792|list(276,34)
								CALL
								 lead: (direct)-> proxy (anon)  @25344|list(276,10)
								 method: ("unlink")-> method unlink  @43552|list(44,3)
								MAKE
								 object: (direct)-> object (anon)  @34032|list(277,12)
								 type: ("bool")-> type bool  @08256|bool(5,6)
								CALL --fundamental
								 lead: ("next_next")-> object next_next  @31792|list(276,34)
								 method: ("is_null?")-> method is_null?  @19968|object(36,3)
								 output: (direct)-> object (anon)  @34032|list(277,12)
								IF
								 condition: (direct)-> object (anon)  @34032|list(277,12)
								{
									true branch: BLOCK --domain
									{
										CALL --terminal, fundamental
										 lead: ("io.last")-> object last  @40640|list(328,3)
										 method: ("recycle")-> method recycle  @22464|object(60,3)
										CALL --fundamental
										 lead: ("io.last")-> object last  @40640|list(328,3)
										 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
										 input: ("io.current")-> object current  @35840|list(329,3)
									}
									false branch: BLOCK --domain
									{
										MAKE
										 proxy: (direct)-> proxy (anon)  @25648|list(280,17)
										 type: ("node1")-> type node1  @45456|list(22,6)
										 permission: [upd]
										CALL --fundamental
										 lead: ("io.current")-> object current  @35840|list(329,3)
										 method: ("deref")-> method deref  @15536|$appendix(,)
										 result: (direct)-> proxy (anon)  @25648|list(280,17)
										CALL
										 lead: (direct)-> proxy (anon)  @25648|list(280,17)
										 method: ("set_next")-> method set_next  @42720|list(39,3)
										 input: ("next_next")-> object next_next  @31792|list(276,34)
									}
								}
							}
						}
					}
					false branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object (anon)  @40112|list(283,15)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("io.first")-> object first  @33280|list(327,3)
						 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
						 output: (direct)-> object (anon)  @40112|list(283,15)
						IF
						 condition: (direct)-> object (anon)  @40112|list(283,15)
						{
							true branch: BLOCK --domain
							{
								MAKE
								 proxy: (direct)-> proxy (anon)  @29904|list(286,13)
								 type: ("node1")-> type node1  @45456|list(22,6)
								 permission: [upd]
								CALL --fundamental
								 lead: ("io.first")-> object first  @33280|list(327,3)
								 method: ("deref")-> method deref  @15536|$appendix(,)
								 result: (direct)-> proxy (anon)  @29904|list(286,13)
								MAKE
								 object: (direct)-> object next_next  @32112|list(286,37)
								 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
								CALL
								 lead: (direct)-> proxy (anon)  @29904|list(286,13)
								 method: ("get_next")-> method get_next  @42304|list(34,3)
								 output: (direct)-> object next_next  @32112|list(286,37)
								CALL
								 lead: (direct)-> proxy (anon)  @29904|list(286,13)
								 method: ("unlink")-> method unlink  @43552|list(44,3)
								MAKE
								 object: (direct)-> object (anon)  @35952|list(287,11)
								 type: ("bool")-> type bool  @08256|bool(5,6)
								CALL --fundamental
								 lead: ("next_next")-> object next_next  @32112|list(286,37)
								 method: ("is_null?")-> method is_null?  @19968|object(36,3)
								 output: (direct)-> object (anon)  @35952|list(287,11)
								IF
								 condition: (direct)-> object (anon)  @35952|list(287,11)
								{
									true branch: BLOCK --domain
									{
										CALL --terminal, fundamental
										 lead: ("io.first")-> object first  @33280|list(327,3)
										 method: ("recycle")-> method recycle  @22464|object(60,3)
										CALL --terminal, fundamental
										 lead: ("io.last")-> object last  @40640|list(328,3)
										 method: ("recycle")-> method recycle  @22464|object(60,3)
									}
									false branch: BLOCK --domain
									{
										CALL --terminal, fundamental
										 lead: ("io.first")-> object first  @33280|list(327,3)
										 method: ("recycle")-> method recycle  @22464|object(60,3)
										CALL --fundamental
										 lead: ("io.first")-> object first  @33280|list(327,3)
										 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
										 input: ("next_next")-> object next_next  @32112|list(286,37)
									}
								}
							}
						}
					}
				}
			}
		}

		abstract method ~flip_cursor  @22096|list(314,11) --fraternal
		 key = serial_access<t><c>-2
		 viable = yes
		{

			given
			{
				object c  @39152|list(314,11) --internal
				 type: ("list_cursor")-> type list_cursor  @42768|list(57,13)

				object io  @34352|list(314,11) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("c")-> object c  @39152|list(314,11)
				 method: ("flip")-> method flip  @44800|list(80,3)
			}
		}

		abstract method ~move_cursor  @26560|list(309,11) --fraternal
		 key = serial_access<t><c>-1
		 viable = yes
		{

			given
			{
				object c  @36912|list(309,11) --internal
				 type: ("list_cursor")-> type list_cursor  @42768|list(57,13)

				object io  @41392|list(309,11) --internal
				 type: (direct)-> type list  @43536|list(99,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("c")-> object c  @36912|list(309,11)
				 method: ("move")-> method move  @44384|list(70,3)
			}
		}

		abstract method ~open_cursor  @27056|list(304,11) --fraternal
		 key = serial_access<t><c>-0
		 viable = yes
		{

			given
			{
				object c  @27952|list(304,11) --internal
				 type: ("list_cursor")-> type list_cursor  @42768|list(57,13)

				object io  @37552|list(304,11) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				object step  @36272|list(304,11) --internal
				 type: ("int")-> type int  @54576|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @28272|list(306,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("step")-> object step  @36272|list(304,11)
				 method: ("is_equal?")-> method is_equal?  @61408|int(64,3)
				 input: ("one")-> object one  @08720|conventional(36,2)
				 output: (direct)-> object (anon)  @28272|list(306,10)
				IF
				 condition: (direct)-> object (anon)  @28272|list(306,10)
				{
					true branch: CALL --initial
					 lead: ("c")-> object c  @27952|list(304,11)
					 method: ("begin")-> method begin  @43968|list(65,3)
					 input: ("io.first")-> object first  @33280|list(327,3)
					false branch: CALL --initial
					 lead: ("c")-> object c  @27952|list(304,11)
					 method: ("begin")-> method begin  @43968|list(65,3)
					 input: (pending)->
				}
			}
		}

		abstract method ~use@  @22592|list(319,11) --fraternal
		 key = serial_access<t><c>-3
		 viable = yes
		{

			given
			{
				object c  @29232|list(319,11) --internal
				 type: ("list_cursor")-> type list_cursor  @42768|list(57,13)

				object io  @38832|list(319,11) --internal
				 type: (direct)-> type list  @43536|list(99,6)

				proxy ~n  @34032|list(319,11) --internal
				 type: ("node1")-> type node1  @45456|list(22,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @39296|list(321,11)
				 type: ("node1")-> type node1  @45456|list(22,6)
				 permission: [eval]
				CALL
				 lead: ("c")-> object c  @29232|list(319,11)
				 method: ("use_node")-> method use_node  @45216|list(85,3)
				 result: (direct)-> proxy (anon)  @39296|list(321,11)
				JOIN
				 left: ("~n")-> proxy ~n  @34032|list(319,11)
				 right: (direct)-> proxy (anon)  @39296|list(321,11)
			}
		}

		instance
		{
			object current  @35840|list(329,3) --internal
			 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)

			object first  @33280|list(327,3) --internal
			 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)

			object last  @40640|list(328,3) --internal
			 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
		}

	}

	type list<t>  @42384|list(350,6) --external
	 from ("list")-> type list  @43536|list(99,6)
	 viable = no
	{
		method begin  @20880|list(359,3) --external
		 viable = no
		{

			given
			{
				object io  @34992|list(359,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @27472|list(361,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @34992|list(359,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @27472|list(361,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @27472|list(361,6)
				 method: ("begin")-> method begin  @45632|list(167,3)
			}
		}

		method begin  @15056|list(364,3) --external
		 viable = no
		{

			given
			{
				object io  @29552|list(364,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				object other  @40752|list(364,3) --internal
				 type: ("list<t>")-> type list<t>  @42384|list(350,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @27776|list(366,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @29552|list(364,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @27776|list(366,6)
				MAKE
				 proxy: (direct)-> proxy (anon)  @28080|list(366,34)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("other")-> object other  @40752|list(364,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @28080|list(366,34)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @27776|list(366,6)
				 method: ("begin")-> method begin  @47712|list(172,3)
				 input: (direct)-> proxy (anon)  @28080|list(366,34)
			}
		}

		method begin  @10064|list(370,3) --external
		 viable = no
		{

			given
			{
				object io  @24752|list(370,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				object other  @35312|list(370,3) --internal
				 type: ("list<t>")-> type list<t>  @42384|list(350,6)
			}

			BLOCK* --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @40432|list(,)
				 type: ("list_cursor")-> type list_cursor  @42768|list(57,13)
				CALL --fundamental
				 lead: ("other")-> object other  @35312|list(370,3)
				 method: ("open_cursor")-> method open_cursor  @15952|$appendix(,)
				 input: (pending)->
				 output: (direct)-> object (anon)  @40432|list(,)
				LOOP* --unconditional
				{
					iteration branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy ~n  @26256|list(,)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [eval]
						CALL --fundamental
						 lead: ("other")-> object other  @35312|list(370,3)
						 method: ("use@")-> method use@  @11792|$appendix(,)
						 input: (direct)-> object (anon)  @40432|list(,)
						 result: (direct)-> proxy ~n  @26256|list(,)
						MAKE
						 analog: (direct)-> analog (anon)  @42032|list(,)
						 type: ("analog")-> type analog  @19040|analog(5,6)
						MAKE
						 object: (direct)-> object (anon)  @41712|list(,)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> analog (anon)  @42032|list(,)
						 method: ("is_void?")-> method is_void?  @29840|analog(23,3)
						 output: (direct)-> object (anon)  @41712|list(,)
						IF
						 condition: (direct)-> object (anon)  @41712|list(,)
						{
							true branch: RETURN --to loop (escape)
						}
						BLOCK* --domain
						{
							MAKE
							 object: (direct)-> object nl  @25072|list(374,5)
							 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
							CALL* --provisional --initial, fundamental
							 lead: (direct)-> object nl  @25072|list(374,5)
							 method: ("begin<<t>node1>")-> method begin<xt>  @18448|$appendix(,)
							CALL* --provisional
							 lead: (direct)-> blank (anon)  @42480|list(,)
							 method: ("begin")-> (unmatched)
							TRANSLATE* --provisional --random
							 lead: ("~n")-> proxy ~n  @26256|list(,)
							 method: ("as<t>")-> method as<t>  @17472|object(53,3)
							CALL* --provisional
							 lead: ("~new_t")-> blank ~new_t  @36224|list(,)
							 method: ("begin")-> (unmatched)
							 input: (direct)-> blank (anon)  @36496|list(,)
							MAKE
							 proxy: (direct)-> proxy (anon)  @30208|list(376,7)
							 type: ("list")-> type list  @43536|list(99,6)
							 permission: [init]
							TRANSLATE --base
							 lead: ("io")-> object io  @24752|list(370,3)
							 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
							 result: (direct)-> proxy (anon)  @30208|list(376,7)
							CALL
							 lead: (direct)-> proxy (anon)  @30208|list(376,7)
							 method: ("insert")-> method insert  @46048|list(242,3)
							 input: ("nl")-> object nl  @25072|list(374,5)
							CALL
							 lead: (direct)-> proxy (anon)  @30208|list(376,7)
							 method: ("go_next")-> method go_next  @50624|list(224,3)
						}
						CALL --fundamental
						 lead: ("other")-> object other  @35312|list(370,3)
						 method: ("move_cursor")-> method move_cursor  @14288|$appendix(,)
						 input: (direct)-> object (anon)  @40432|list(,)
					}
				}
			}
		}

		method begin  @20464|list(380,3) --external
		 viable = no
		{

			given
			{
				subroutine copier  @51040|list(380,3) --internal
				 viable = yes

				object io  @42032|list(380,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				object other  @35632|list(380,3) --internal
				 type: ("list<t>")-> type list<t>  @42384|list(350,6)
			}

			BLOCK* --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @25392|list(,)
				 type: ("list_cursor")-> type list_cursor  @42768|list(57,13)
				CALL --fundamental
				 lead: ("other")-> object other  @35632|list(380,3)
				 method: ("open_cursor")-> method open_cursor  @15952|$appendix(,)
				 input: (pending)->
				 output: (direct)-> object (anon)  @25392|list(,)
				LOOP* --unconditional
				{
					iteration branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy ~n  @30816|list(,)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [eval]
						CALL --fundamental
						 lead: ("other")-> object other  @35632|list(380,3)
						 method: ("use@")-> method use@  @11792|$appendix(,)
						 input: (direct)-> object (anon)  @25392|list(,)
						 result: (direct)-> proxy ~n  @30816|list(,)
						MAKE
						 analog: (direct)-> analog (anon)  @42416|list(,)
						 type: ("analog")-> type analog  @19040|analog(5,6)
						MAKE
						 object: (direct)-> object (anon)  @42352|list(,)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> analog (anon)  @42416|list(,)
						 method: ("is_void?")-> method is_void?  @29840|analog(23,3)
						 output: (direct)-> object (anon)  @42352|list(,)
						IF
						 condition: (direct)-> object (anon)  @42352|list(,)
						{
							true branch: RETURN --to loop (escape)
						}
						BLOCK* --domain
						{
							MAKE
							 object: (direct)-> object nl  @25712|list(384,5)
							 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
							CALL* --provisional --initial, fundamental
							 lead: (direct)-> object nl  @25712|list(384,5)
							 method: ("begin<<t>node1>")-> method begin<xt>  @18448|$appendix(,)
							CALL* --provisional
							 lead: (direct)-> blank (anon)  @40576|list(,)
							 method: ("begin")-> (unmatched)
							TRANSLATE* --provisional --random
							 lead: ("~n")-> proxy ~n  @30816|list(,)
							 method: ("as<t>")-> method as<t>  @17472|object(53,3)
							CALL* --provisional
							 subroutine: ("copier")-> subroutine copier  @51040|list(380,3)
							 input: (direct)-> blank (anon)  @41120|list(,)
							 output: ("~new_t")-> blank ~new_t  @38944|list(,)
							MAKE
							 proxy: (direct)-> proxy (anon)  @31728|list(387,7)
							 type: ("list")-> type list  @43536|list(99,6)
							 permission: [init]
							TRANSLATE --base
							 lead: ("io")-> object io  @42032|list(380,3)
							 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
							 result: (direct)-> proxy (anon)  @31728|list(387,7)
							CALL
							 lead: (direct)-> proxy (anon)  @31728|list(387,7)
							 method: ("insert")-> method insert  @46048|list(242,3)
							 input: ("nl")-> object nl  @25712|list(384,5)
							CALL
							 lead: (direct)-> proxy (anon)  @31728|list(387,7)
							 method: ("go_next")-> method go_next  @50624|list(224,3)
						}
						CALL --fundamental
						 lead: ("other")-> object other  @35632|list(380,3)
						 method: ("move_cursor")-> method move_cursor  @14288|$appendix(,)
						 input: (direct)-> object (anon)  @25392|list(,)
					}
				}
			}
		}

		method insert  @12976|list(391,3) --external
		 viable = no
		{

			given
			{
				object io  @42672|list(391,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				proxy ~t  @35040|list(391,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 object: (direct)-> object nl  @26032|list(393,10)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL* --provisional --initial, fundamental
				 lead: (direct)-> object nl  @26032|list(393,10)
				 method: ("begin<<t>node1>")-> method begin<xt>  @18448|$appendix(,)
				CALL* --provisional
				 lead: (direct)-> blank (anon)  @65056|list(,)
				 method: ("begin")-> (unmatched)
				JOIN* --provisional
				 left: ("~t")-> proxy ~t  @35040|list(391,3)
				 right: (direct)-> blank (anon)  @61248|list(,)
				MAKE
				 proxy: (direct)-> proxy (anon)  @32032|list(394,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @42672|list(391,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @32032|list(394,6)
				CALL
				 lead: (direct)-> proxy (anon)  @32032|list(394,6)
				 method: ("insert")-> method insert  @46048|list(242,3)
				 input: ("nl")-> object nl  @26032|list(393,10)
			}
		}

		nom type list_t  @05776|list(352,11) --internal
		 viable = no
		 equivalent: ("list<t>")-> type list<t>  @42384|list(350,6)

		method remove_next  @09648|list(421,3) --external
		 viable = no
		{

			given
			{
				subroutine copier  @55840|list(421,3) --internal
				 viable = yes

				object io  @51952|list(421,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				object next  @50352|list(421,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @25952|list(423,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @51952|list(421,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @25952|list(423,6)
				MAKE
				 object: (direct)-> object nl  @53232|list(423,33)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL
				 lead: (direct)-> proxy (anon)  @25952|list(423,6)
				 method: ("get_next")-> method get_next  @51040|list(203,3)
				 output: (direct)-> object nl  @53232|list(423,33)
				MAKE
				 object: (direct)-> object (anon)  @50672|list(424,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("nl")-> object nl  @53232|list(423,33)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @50672|list(424,10)
				IF*
				 condition: (direct)-> object (anon)  @50672|list(424,10)
				{
					true branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @32336|list(426,15)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("nl")-> object nl  @53232|list(423,33)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @32336|list(426,15)
						TRANSLATE* --provisional --random
						 lead: (direct)-> proxy (anon)  @32336|list(426,15)
						 method: ("as<t>")-> method as<t>  @17472|object(53,3)
						CALL* --provisional
						 subroutine: ("copier")-> subroutine copier  @55840|list(421,3)
						 input: (direct)-> blank (anon)  @61792|list(,)
						 output: ("next")-> object next  @50352|list(421,3)
						MAKE
						 proxy: (direct)-> proxy (anon)  @34160|list(427,7)
						 type: ("list")-> type list  @43536|list(99,6)
						 permission: [init]
						TRANSLATE --base
						 lead: ("io")-> object io  @51952|list(421,3)
						 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
						 result: (direct)-> proxy (anon)  @34160|list(427,7)
						CALL
						 lead: (direct)-> proxy (anon)  @34160|list(427,7)
						 method: ("remove_next")-> method remove_next  @47296|list(268,3)
					}
				}
			}
		}

		method remove_next  @10896|list(431,3) --external
		 viable = no
		{

			given
			{
				object io  @54512|list(431,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				object next  @49712|list(431,3) --internal
				 type: ("t")-> (unmatched)

				subroutine taker  @51440|list(431,3) --internal
				 viable = yes
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @33856|list(433,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @54512|list(431,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @33856|list(433,6)
				MAKE
				 object: (direct)-> object nl  @45232|list(433,33)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL
				 lead: (direct)-> proxy (anon)  @33856|list(433,6)
				 method: ("get_next")-> method get_next  @51040|list(203,3)
				 output: (direct)-> object nl  @45232|list(433,33)
				MAKE
				 object: (direct)-> object (anon)  @54192|list(434,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("nl")-> object nl  @45232|list(433,33)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @54192|list(434,10)
				IF*
				 condition: (direct)-> object (anon)  @54192|list(434,10)
				{
					true branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @35072|list(436,15)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("nl")-> object nl  @45232|list(433,33)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @35072|list(436,15)
						TRANSLATE* --provisional --random
						 lead: (direct)-> proxy (anon)  @35072|list(436,15)
						 method: ("as<t>")-> method as<t>  @17472|object(53,3)
						CALL* --provisional
						 subroutine: ("taker")-> subroutine taker  @51440|list(431,3)
						 input: (direct)-> blank (anon)  @58256|list(,)
						 output: ("next")-> object next  @49712|list(431,3)
						MAKE
						 proxy: (direct)-> proxy (anon)  @40544|list(437,7)
						 type: ("list")-> type list  @43536|list(99,6)
						 permission: [init]
						TRANSLATE --base
						 lead: ("io")-> object io  @54512|list(431,3)
						 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
						 result: (direct)-> proxy (anon)  @40544|list(437,7)
						CALL
						 lead: (direct)-> proxy (anon)  @40544|list(437,7)
						 method: ("remove_next")-> method remove_next  @47296|list(268,3)
					}
				}
			}
		}

		nom type t_node1  @12176|list(354,11) --internal
		 viable = no
		 equivalent: ("<t>node1")-> type <t>node1  @41616|list(337,13)

		method use_current  @16720|list(409,3) --external
		 viable = no
		{

			given
			{
				object io  @26992|list(409,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				proxy ~t  @33520|list(409,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @39632|list(411,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [eval]
				TRANSLATE --base
				 lead: ("io")-> object io  @26992|list(409,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @39632|list(411,6)
				MAKE
				 object: (direct)-> object nl  @43952|list(411,36)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL
				 lead: (direct)-> proxy (anon)  @39632|list(411,6)
				 method: ("get_current")-> method get_current  @46880|list(198,3)
				 output: (direct)-> object nl  @43952|list(411,36)
				MAKE
				 object: (direct)-> object (anon)  @44272|list(412,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("nl")-> object nl  @43952|list(411,36)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @44272|list(412,10)
				IF*
				 condition: (direct)-> object (anon)  @44272|list(412,10)
				{
					true branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @39024|list(412,40)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("nl")-> object nl  @43952|list(411,36)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @39024|list(412,40)
						TRANSLATE* --provisional --random
						 lead: (direct)-> proxy (anon)  @39024|list(412,40)
						 method: ("as<t>")-> method as<t>  @17472|object(53,3)
						JOIN* --provisional
						 left: ("~t")-> proxy ~t  @33520|list(409,3)
						 right: (direct)-> blank (anon)  @58528|list(,)
					}
				}
			}
		}

		method use_first  @21296|list(397,3) --external
		 viable = no
		{

			given
			{
				object io  @42992|list(397,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				proxy ~t  @37776|list(397,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @37808|list(399,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [eval]
				TRANSLATE --base
				 lead: ("io")-> object io  @42992|list(397,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @37808|list(399,6)
				MAKE
				 object: (direct)-> object nl  @26352|list(399,34)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL
				 lead: (direct)-> proxy (anon)  @37808|list(399,6)
				 method: ("get_first")-> method get_first  @51456|list(188,3)
				 output: (direct)-> object nl  @26352|list(399,34)
				MAKE
				 object: (direct)-> object (anon)  @43312|list(400,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("nl")-> object nl  @26352|list(399,34)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @43312|list(400,10)
				IF*
				 condition: (direct)-> object (anon)  @43312|list(400,10)
				{
					true branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @32944|list(400,40)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("nl")-> object nl  @26352|list(399,34)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @32944|list(400,40)
						TRANSLATE* --provisional --random
						 lead: (direct)-> proxy (anon)  @32944|list(400,40)
						 method: ("as<t>")-> method as<t>  @17472|object(53,3)
						JOIN* --provisional
						 left: ("~t")-> proxy ~t  @37776|list(397,3)
						 right: (direct)-> blank (anon)  @61520|list(,)
					}
				}
			}
		}

		method use_last  @21712|list(403,3) --external
		 viable = no
		{

			given
			{
				object io  @26672|list(403,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				proxy ~t  @32912|list(403,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @35376|list(405,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [eval]
				TRANSLATE --base
				 lead: ("io")-> object io  @26672|list(403,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @35376|list(405,6)
				MAKE
				 object: (direct)-> object nl  @43632|list(405,33)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL
				 lead: (direct)-> proxy (anon)  @35376|list(405,6)
				 method: ("get_last")-> method get_last  @46464|list(193,3)
				 output: (direct)-> object nl  @43632|list(405,33)
				MAKE
				 object: (direct)-> object (anon)  @29872|list(406,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("nl")-> object nl  @43632|list(405,33)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @29872|list(406,10)
				IF*
				 condition: (direct)-> object (anon)  @29872|list(406,10)
				{
					true branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @36592|list(406,40)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("nl")-> object nl  @43632|list(405,33)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @36592|list(406,40)
						TRANSLATE* --provisional --random
						 lead: (direct)-> proxy (anon)  @36592|list(406,40)
						 method: ("as<t>")-> method as<t>  @17472|object(53,3)
						JOIN* --provisional
						 left: ("~t")-> proxy ~t  @32912|list(403,3)
						 right: (direct)-> blank (anon)  @53904|list(,)
					}
				}
			}
		}

		method use_next  @10480|list(415,3) --external
		 viable = no
		{

			given
			{
				object io  @44592|list(415,3) --internal
				 type: (direct)-> type list<t>  @42384|list(350,6)

				proxy ~t  @38080|list(415,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @34768|list(417,6)
				 type: ("list")-> type list  @43536|list(99,6)
				 permission: [eval]
				TRANSLATE --base
				 lead: ("io")-> object io  @44592|list(415,3)
				 method: (direct)-> method $18<31>( as_base<list> )  @41680|$appendix(,)
				 result: (direct)-> proxy (anon)  @34768|list(417,6)
				MAKE
				 object: (direct)-> object nl  @44912|list(417,33)
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
				CALL
				 lead: (direct)-> proxy (anon)  @34768|list(417,6)
				 method: ("get_next")-> method get_next  @51040|list(203,3)
				 output: (direct)-> object nl  @44912|list(417,33)
				MAKE
				 object: (direct)-> object (anon)  @30512|list(418,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("nl")-> object nl  @44912|list(417,33)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @30512|list(418,10)
				IF*
				 condition: (direct)-> object (anon)  @30512|list(418,10)
				{
					true branch: BLOCK* --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @33248|list(418,40)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("nl")-> object nl  @44912|list(417,33)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @33248|list(418,40)
						TRANSLATE* --provisional --random
						 lead: (direct)-> proxy (anon)  @33248|list(418,40)
						 method: ("as<t>")-> method as<t>  @17472|object(53,3)
						JOIN* --provisional
						 left: ("~t")-> proxy ~t  @38080|list(415,3)
						 right: (direct)-> blank (anon)  @62880|list(,)
					}
				}
			}
		}
	}

	type list_cursor  @42768|list(57,13) --internal
	 viable = yes
	{
		method begin  @43968|list(65,3) --external
		 viable = yes
		{

			given
			{
				object io  @02880|list(65,3) --internal
				 type: (direct)-> type list_cursor  @42768|list(57,13)

				object link1  @64256|list(65,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @58816|list(67,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("given\link1")-> object link1  @64256|list(65,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @58816|list(67,10)
				IF
				 condition: (direct)-> object (anon)  @58816|list(67,10)
				{
					true branch: CALL --fundamental
					 lead: ("io.link1")-> object link1  @40320|list(93,3)
					 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
					 input: ("given\link1")-> object link1  @64256|list(65,3)
				}
			}
		}

		method flip  @44800|list(80,3) --external
		 viable = yes
		{

			given
			{
				object io  @59456|list(80,3) --internal
				 type: (direct)-> type list_cursor  @42768|list(57,13)
			}

			BLOCK --domain
			{
				CALL --terminal, fundamental
				 lead: ("io.link1")-> object link1  @40320|list(93,3)
				 method: ("recycle")-> method recycle  @22464|object(60,3)
			}
		}

		method move  @44384|list(70,3) --external
		 viable = yes
		{

			given
			{
				object io  @03520|list(70,3) --internal
				 type: (direct)-> type list_cursor  @42768|list(57,13)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @00960|list(72,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.link1")-> object link1  @40320|list(93,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @00960|list(72,10)
				IF
				 condition: (direct)-> object (anon)  @00960|list(72,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @34464|list(74,13)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("io.link1")-> object link1  @40320|list(93,3)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @34464|list(74,13)
						MAKE
						 object: (direct)-> object next  @64896|list(74,32)
						 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
						CALL
						 lead: (direct)-> proxy (anon)  @34464|list(74,13)
						 method: ("get_next")-> method get_next  @42304|list(34,3)
						 output: (direct)-> object next  @64896|list(74,32)
						CALL --terminal, fundamental
						 lead: ("io.link1")-> object link1  @40320|list(93,3)
						 method: ("recycle")-> method recycle  @22464|object(60,3)
						MAKE
						 object: (direct)-> object (anon)  @02240|list(76,11)
						 type: ("bool")-> type bool  @08256|bool(5,6)
						CALL --fundamental
						 lead: ("next")-> object next  @64896|list(74,32)
						 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
						 output: (direct)-> object (anon)  @02240|list(76,11)
						IF
						 condition: (direct)-> object (anon)  @02240|list(76,11)
						{
							true branch: CALL --fundamental
							 lead: ("io.link1")-> object link1  @40320|list(93,3)
							 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
							 input: ("next")-> object next  @64896|list(74,32)
						}
					}
				}
			}
		}

		method use_node  @45216|list(85,3) --external
		 viable = yes
		{

			given
			{
				object io  @65216|list(85,3) --internal
				 type: (direct)-> type list_cursor  @42768|list(57,13)

				proxy ~n  @33120|list(85,3) --internal
				 type: ("node1")-> type node1  @45456|list(22,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @63616|list(87,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.link1")-> object link1  @40320|list(93,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @63616|list(87,10)
				IF
				 condition: (direct)-> object (anon)  @63616|list(87,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy (anon)  @35680|list(87,52)
						 type: ("node1")-> type node1  @45456|list(22,6)
						 permission: [upd]
						CALL --fundamental
						 lead: ("io.link1")-> object link1  @40320|list(93,3)
						 method: ("deref")-> method deref  @15536|$appendix(,)
						 result: (direct)-> proxy (anon)  @35680|list(87,52)
						JOIN
						 left: ("~n")-> proxy ~n  @33120|list(85,3)
						 right: (direct)-> proxy (anon)  @35680|list(87,52)
					}
				}
			}
		}

		instance
		{
			object link1  @40320|list(93,3) --internal
			 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
		}

	}

	type node1  @45456|list(22,6) --external
	 viable = yes
	{
		method begin  @41888|list(30,3) --external
		 viable = yes
		{

			given
			{
				object io  @59136|list(30,3) --internal
				 type: (direct)-> type node1  @45456|list(22,6)
			}

			BLOCK --domain
			{
			}
		}

		method get_next  @42304|list(34,3) --external
		 viable = yes
		{

			given
			{
				object io  @62976|list(34,3) --internal
				 type: (direct)-> type node1  @45456|list(22,6)

				object link1  @63296|list(34,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @62336|list(36,10)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL --fundamental
				 lead: ("io.next")-> object next  @40000|list(52,3)
				 method: ("is_not_null?")-> method is_not_null?  @18304|object(38,3)
				 output: (direct)-> object (anon)  @62336|list(36,10)
				IF
				 condition: (direct)-> object (anon)  @62336|list(36,10)
				{
					true branch: CALL --fundamental
					 lead: ("given\link1")-> object link1  @63296|list(34,3)
					 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
					 input: ("io.next")-> object next  @40000|list(52,3)
				}
			}
		}

		method set_next  @42720|list(39,3) --external
		 viable = yes
		{

			given
			{
				object io  @00640|list(39,3) --internal
				 type: (direct)-> type node1  @45456|list(22,6)

				object link1  @62016|list(39,3) --internal
				 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
			}

			BLOCK --domain
			{
				CALL --terminal, fundamental
				 lead: ("io.next")-> object next  @40000|list(52,3)
				 method: ("recycle")-> method recycle  @22464|object(60,3)
				CALL --fundamental
				 lead: ("io.next")-> object next  @40000|list(52,3)
				 method: (direct)-> method $30<7>( begin<node1> )  @37936|$appendix(,)
				 input: ("given\link1")-> object link1  @62016|list(39,3)
			}
		}

		method unlink  @43552|list(44,3) --external
		 viable = yes
		{

			given
			{
				object io  @62656|list(44,3) --internal
				 type: (direct)-> type node1  @45456|list(22,6)
			}

			BLOCK --domain
			{
				CALL --terminal, fundamental
				 lead: ("io.next")-> object next  @40000|list(52,3)
				 method: ("recycle")-> method recycle  @22464|object(60,3)
			}
		}

		instance
		{
			object next  @40000|list(52,3) --internal
			 type: (direct)-> type $6<7>( op<node1> )  @51216|$appendix(,)
		}

	}

	type queue<t>  @47760|list(506,6) --external
	 viable = no
	{
		method begin  @12560|list(520,3) --external
		 viable = no
		{

			given
			{
				object io  @46192|list(520,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)
			}

			BLOCK* --domain
			{
				CALL* --initial
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("begin")-> method begin  @20880|list(359,3)
			}
		}

		method begin  @08400|list(525,3) --external
		 viable = no
		{

			given
			{
				object io  @50992|list(525,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)

				object other  @56752|list(525,3) --internal
				 type: ("queue<t>")-> type queue<t>  @47760|list(506,6)
			}

			BLOCK* --domain
			{
				CALL* --provisional --initial
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("begin")-> method begin  @15056|list(364,3)
				 input: ("other.list")-> object list  @33920|list(566,3)
			}
		}

		method begin  @12144|list(530,3) --external
		 viable = no
		{

			given
			{
				subroutine copier  @54640|list(530,3) --internal
				 viable = yes

				object io  @49072|list(530,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)

				object other  @56112|list(530,3) --internal
				 type: ("queue<t>")-> type queue<t>  @47760|list(506,6)
			}

			BLOCK* --domain
			{
				CALL* --provisional --initial
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("begin")-> method begin  @20464|list(380,3)
				 input: ("other.list")-> object list  @33920|list(566,3)
				 co-routine: ("copier")-> subroutine copier  @54640|list(530,3)
			}
		}

		method is_empty?  @16304|list(535,3) --external
		 viable = no
		{

			given
			{
				object io  @55152|list(535,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)

				object yes  @51312|list(535,3) --internal
				 type: ("bool")-> type bool  @08256|bool(5,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("is_empty?")-> method is_empty?  @48960|list(183,3)
				 output: ("yes")-> object yes  @51312|list(535,3)
			}
		}

		method pull  @13808|list(546,3) --external
		 viable = no
		{

			given
			{
				subroutine copier  @55040|list(546,3) --internal
				 viable = yes

				object first  @56432|list(546,3) --internal
				 type: ("t")-> (unmatched)

				object io  @51632|list(546,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)
			}

			BLOCK* --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @57072|list(548,31)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("is_empty?")-> method is_empty?  @48960|list(183,3)
				 output: (direct)-> object (anon)  @57072|list(548,31)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @57072|list(548,31)
				 method: ("not")-> method not  @31344|bool(42,3)
				IF*
				 condition: (direct)-> object (anon)  @57072|list(548,31)
				{
					true branch: BLOCK* --domain
					{
						CALL
						 lead: ("io.list")-> object list  @33920|list(566,3)
						 method: ("go_front")-> method go_front  @48544|list(209,3)
						CALL* --provisional
						 lead: ("io.list")-> object list  @33920|list(566,3)
						 method: ("remove_next")-> method remove_next  @09648|list(421,3)
						 output: ("first")-> object first  @56432|list(546,3)
						 co-routine: ("copier")-> subroutine copier  @55040|list(546,3)
					}
				}
			}
		}

		method pull  @15472|list(552,3) --external
		 viable = no
		{

			given
			{
				object first  @48112|list(552,3) --internal
				 type: ("t")-> (unmatched)

				object io  @52912|list(552,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)

				subroutine taker  @49440|list(552,3) --internal
				 viable = yes
			}

			BLOCK* --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @46512|list(554,31)
				 type: ("bool")-> type bool  @08256|bool(5,6)
				CALL
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("is_empty?")-> method is_empty?  @48960|list(183,3)
				 output: (direct)-> object (anon)  @46512|list(554,31)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @46512|list(554,31)
				 method: ("not")-> method not  @31344|bool(42,3)
				IF*
				 condition: (direct)-> object (anon)  @46512|list(554,31)
				{
					true branch: BLOCK* --domain
					{
						CALL
						 lead: ("io.list")-> object list  @33920|list(566,3)
						 method: ("go_front")-> method go_front  @48544|list(209,3)
						CALL* --provisional
						 lead: ("io.list")-> object list  @33920|list(566,3)
						 method: ("remove_next")-> method remove_next  @10896|list(431,3)
						 output: ("first")-> object first  @48112|list(552,3)
						 co-routine: ("taker")-> subroutine taker  @49440|list(552,3)
					}
				}
			}
		}

		method push  @13392|list(540,3) --external
		 viable = no
		{

			given
			{
				object io  @45872|list(540,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)

				proxy ~t  @61760|list(540,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				CALL
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("go_last")-> method go_last  @49792|list(219,3)
				CALL* --provisional
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("insert")-> method insert  @12976|list(391,3)
				JOIN* --provisional
				 left: ("~t")-> proxy ~t  @61760|list(540,3)
				 right: (direct)-> blank (anon)  @63696|list(,)
			}
		}

		nom type queue_t  @64928|list(516,11) --internal
		 viable = no
		 equivalent: ("queue<t>")-> type queue<t>  @47760|list(506,6)

		method use_first  @20048|list(558,3) --external
		 viable = no
		{

			given
			{
				object io  @47152|list(558,3) --internal
				 type: (direct)-> type queue<t>  @47760|list(506,6)

				proxy ~t  @61152|list(558,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				CALL* --provisional
				 lead: ("io.list")-> object list  @33920|list(566,3)
				 method: ("use_first")-> method use_first  @21296|list(397,3)
				JOIN* --provisional
				 left: ("~t")-> proxy ~t  @61152|list(558,3)
				 right: (direct)-> blank (anon)  @63152|list(,)
			}
		}

		instance
		{
			object list  @33920|list(566,3) --internal
			 type: ("list<t>")-> type list<t>  @42384|list(350,6)
		}

	}

	type stack<t>  @48144|list(444,6) --external
	 viable = no
	{
		method begin  @19632|list(461,3) --external
		 viable = no
		{

			given
			{
				object io  @52272|list(461,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)
			}

			BLOCK* --domain
			{
				CALL* --initial
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("begin")-> method begin  @20880|list(359,3)
			}
		}

		method begin  @11728|list(466,3) --external
		 viable = no
		{

			given
			{
				object io  @53552|list(466,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)

				object other  @52592|list(466,3) --internal
				 type: ("stack<t>")-> type stack<t>  @48144|list(444,6)
			}

			BLOCK* --domain
			{
				CALL* --provisional --initial
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("begin")-> method begin  @15056|list(364,3)
				 input: ("other.list")-> object list  @32960|list(500,3)
			}
		}

		method begin  @14640|list(471,3) --external
		 viable = no
		{

			given
			{
				subroutine copier  @51840|list(471,3) --internal
				 viable = yes

				object io  @54832|list(471,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)

				object other  @55792|list(471,3) --internal
				 type: ("stack<t>")-> type stack<t>  @48144|list(444,6)
			}

			BLOCK* --domain
			{
				CALL* --provisional --initial
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("begin")-> method begin  @20464|list(380,3)
				 input: ("other.list")-> object list  @32960|list(500,3)
				 co-routine: ("copier")-> subroutine copier  @51840|list(471,3)
			}
		}

		method is_empty?  @22128|list(477,3) --external
		 viable = no
		{

			given
			{
				object io  @47792|list(477,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)

				object yes  @55472|list(477,3) --internal
				 type: ("bool")-> type bool  @08256|bool(5,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("is_empty?")-> method is_empty?  @48960|list(183,3)
				 output: ("yes")-> object yes  @55472|list(477,3)
			}
		}

		method pop  @07152|list(487,3) --external
		 viable = no
		{

			given
			{
				object io  @45552|list(487,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("remove_next")-> method remove_next  @47296|list(268,3)
			}
		}

		method push  @22544|list(482,3) --external
		 viable = no
		{

			given
			{
				object io  @53872|list(482,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)

				proxy ~t  @63280|list(482,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				CALL* --provisional
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("insert")-> method insert  @12976|list(391,3)
				JOIN* --provisional
				 left: ("~t")-> proxy ~t  @63280|list(482,3)
				 right: (direct)-> blank (anon)  @56896|list(,)
			}
		}

		nom type stack_t  @08080|list(457,11) --internal
		 viable = no
		 equivalent: ("stack<t>")-> type stack<t>  @48144|list(444,6)

		method use_top  @11312|list(492,3) --external
		 viable = no
		{

			given
			{
				object io  @49392|list(492,3) --internal
				 type: (direct)-> type stack<t>  @48144|list(444,6)

				proxy ~t  @59328|list(492,3) --internal
				 type: ("t")-> (unmatched)
			}

			BLOCK* --domain
			{
				CALL* --provisional
				 lead: ("io.list")-> object list  @32960|list(500,3)
				 method: ("use_first")-> method use_first  @21296|list(397,3)
				JOIN* --provisional
				 left: ("~t")-> proxy ~t  @59328|list(492,3)
				 right: (direct)-> blank (anon)  @60432|list(,)
			}
		}

		instance
		{
			object list  @32960|list(500,3) --internal
			 type: ("list<t>")-> type list<t>  @42384|list(350,6)
		}

	}
}

