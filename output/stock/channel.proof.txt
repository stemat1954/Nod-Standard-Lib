page channel
{
	type async_channel_reader  @10400|channel(497,6) --external
	 viable = yes
	{
		method begin  @06192|channel(501,3) --external
		 viable = yes
		{

			given
			{
				object io  @00592|channel(501,3) --internal
				 type: (direct)-> type async_channel_reader  @10400|channel(497,6)
			}

			BLOCK --domain
			{
			}
		}

		method read  @17840|channel(505,3) --external
		 viable = yes
		{

			given
			{
				object hq  @01232|channel(505,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @61968|channel(505,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @04112|channel(505,3) --internal
				 type: (direct)-> type async_channel_reader  @10400|channel(497,6)

				object med  @02512|channel(505,3) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)

				object note  @06032|channel(505,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object report  @02832|channel(505,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @04752|channel(505,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object offset  @62928|channel(507,18)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @02512|channel(505,3)
				 method: ("get_wp")-> method get_wp  @24064|mediator(359,3)
				 output: (direct)-> object offset  @62928|channel(507,18)
				MAKE
				 object: (direct)-> object rsize  @05072|channel(507,44)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @02512|channel(505,3)
				 method: ("get_size")-> method get_size  @14912|mediator(333,3)
				 output: (direct)-> object rsize  @05072|channel(507,44)
				CALL --fundamental
				 lead: (direct)-> object rsize  @05072|channel(507,44)
				 method: ("sub")-> method sub  @46576|int(79,3)
				 input: ("offset")-> object offset  @62928|channel(507,18)
				MAKE
				 object: (direct)-> object (anon)  @59728|channel(508,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("zero")-> object zero  @41840|conventional(34,2)
				 method: ("is_less?")-> method is_less?  @35168|int(68,3)
				 input: ("rsize")-> object rsize  @05072|channel(507,44)
				 output: (direct)-> object (anon)  @59728|channel(508,10)
				IF
				 condition: (direct)-> object (anon)  @59728|channel(508,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object pdata  @05392|channel(510,19)
						 type: ("addr")-> type addr  @44496|addr(4,6)
						MAKE
						 object: (direct)-> object (anon)  @58768|channel(510,8)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --fundamental
						 lead: ("med")-> object med  @02512|channel(505,3)
						 method: ("detach")-> method detach  @62144|mediator(319,3)
						 output: (direct)-> object pdata  @05392|channel(510,19)
						 output: (direct)-> object (anon)  @58768|channel(510,8)
						MAKE
						 object: (direct)-> object deficit  @62608|channel(511,53)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --virtual
						 lead: ("io")-> object io  @04112|channel(505,3)
						 method: ("~read")-> abstract method ~read  @56160|channel(522,3)
						 input: ("id")-> object id  @61968|channel(505,3)
						 input: ("hq")-> object hq  @01232|channel(505,3)
						 input: ("seek")-> object seek  @04752|channel(505,3)
						 input: ("pdata")-> object pdata  @05392|channel(510,19)
						 input: ("offset")-> object offset  @62928|channel(507,18)
						 input: ("rsize")-> object rsize  @05072|channel(507,44)
						 output: (direct)-> object deficit  @62608|channel(511,53)
						 output: ("report")-> object report  @02832|channel(505,3)
						 output: ("note")-> object note  @06032|channel(505,3)
						MAKE
						 object: (direct)-> object (anon)  @05712|channel(512,13)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: ("deficit")-> object deficit  @62608|channel(511,53)
						 method: ("is_equal?")-> method is_equal?  @34336|int(64,3)
						 input: ("rsize")-> object rsize  @05072|channel(507,44)
						 output: (direct)-> object (anon)  @05712|channel(512,13)
						MAKE
						 object: (direct)-> object (anon)  @06992|channel(512,13)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> object (anon)  @05712|channel(512,13)
						 method: ("not")-> method not  @39376|bool(43,3)
						 output: (direct)-> object (anon)  @06992|channel(512,13)
						MAKE
						 literal: (direct)-> literal (anon)  @58128|channel(,) --'pending'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						MAKE
						 object: (direct)-> object (anon)  @07312|channel(512,43)
						 type: (direct)-> enum type channel_report  @04112|channel(160,11)
						CALL --initial
						 lead: (direct)-> object (anon)  @07312|channel(512,43)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @58128|channel(,)
						MAKE
						 object: (direct)-> object (anon)  @07632|channel(512,43)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL
						 lead: ("report")-> object report  @02832|channel(505,3)
						 method: ("is_equal?")-> method is_equal?  @01856|channel(160,11)
						 input: (direct)-> object (anon)  @07312|channel(512,43)
						 output: (direct)-> object (anon)  @07632|channel(512,43)
						MAKE
						 object: (direct)-> object (anon)  @60368|channel(512,43)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> object (anon)  @07632|channel(512,43)
						 method: ("not")-> method not  @39376|bool(43,3)
						 output: (direct)-> object (anon)  @60368|channel(512,43)
						MAKE
						 object: (direct)-> object (anon)  @58448|channel(512,11)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> object (anon)  @06992|channel(512,13)
						 method: ("or")-> method or  @41872|bool(37,3)
						 input: (direct)-> object (anon)  @60368|channel(512,43)
						 output: (direct)-> object (anon)  @58448|channel(512,11)
						IF
						 condition: (direct)-> object (anon)  @58448|channel(512,11)
						{
							true branch: BLOCK --domain
							{
								MAKE
								 literal: (direct)-> literal (anon)  @61008|channel(,) --'r'
								 type: ("expr")-> type expr  @18368|expr(5,6)
								MAKE
								 object: (direct)-> object (anon)  @32208|channel(512,72)
								 type: ("ascii")-> type ascii  @19552|ascii(5,6)
								CALL --initial, fundamental
								 lead: (direct)-> object (anon)  @32208|channel(512,72)
								 method: ("begin")-> method begin  @25872|ascii(108,3)
								 input: (direct)-> literal (anon)  @61008|channel(,)
								CALL
								 subroutine: ("update_mediator")-> subroutine update_mediator  @39360|channel(148,2)
								 input: ("med")-> object med  @02512|channel(505,3)
								 input: ("pdata")-> object pdata  @05392|channel(510,19)
								 input: ("offset")-> object offset  @62928|channel(507,18)
								 input: ("rsize")-> object rsize  @05072|channel(507,44)
								 input: ("deficit")-> object deficit  @62608|channel(511,53)
								 input: (direct)-> object (anon)  @32208|channel(512,72)
							}
						}
					}
					false branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @30608|channel(,) --'good'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("report")-> object report  @02832|channel(505,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @30608|channel(,)
					}
				}
			}
		}

		abstract method ~read  @56160|channel(522,3) --fraternal
		 key = async_channel_reader-0
		 viable = yes
	}

	type async_channel_writer  @34144|channel(527,6) --external
	 viable = yes
	{
		method begin  @18256|channel(531,3) --external
		 viable = yes
		{

			given
			{
				object io  @24208|channel(531,3) --internal
				 type: (direct)-> type async_channel_writer  @34144|channel(527,6)
			}

			BLOCK --domain
			{
			}
		}

		method write  @18672|channel(535,3) --external
		 viable = yes
		{

			given
			{
				object hq  @19728|channel(535,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @23888|channel(535,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @17808|channel(535,3) --internal
				 type: (direct)-> type async_channel_writer  @34144|channel(527,6)

				object med  @17168|channel(535,3) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)

				object note  @31568|channel(535,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object report  @29968|channel(535,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @21968|channel(535,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object offset  @28688|channel(537,18)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @17168|channel(535,3)
				 method: ("get_rp")-> method get_rp  @16992|mediator(344,3)
				 output: (direct)-> object offset  @28688|channel(537,18)
				MAKE
				 object: (direct)-> object rsize  @28048|channel(537,44)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @17168|channel(535,3)
				 method: ("get_size")-> method get_size  @14912|mediator(333,3)
				 output: (direct)-> object rsize  @28048|channel(537,44)
				CALL --fundamental
				 lead: (direct)-> object rsize  @28048|channel(537,44)
				 method: ("sub")-> method sub  @46576|int(79,3)
				 input: ("offset")-> object offset  @28688|channel(537,18)
				MAKE
				 object: (direct)-> object (anon)  @27728|channel(538,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("zero")-> object zero  @41840|conventional(34,2)
				 method: ("is_less?")-> method is_less?  @35168|int(68,3)
				 input: ("rsize")-> object rsize  @28048|channel(537,44)
				 output: (direct)-> object (anon)  @27728|channel(538,10)
				IF
				 condition: (direct)-> object (anon)  @27728|channel(538,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object pdata  @24528|channel(540,19)
						 type: ("addr")-> type addr  @44496|addr(4,6)
						MAKE
						 object: (direct)-> object (anon)  @22608|channel(540,8)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --fundamental
						 lead: ("med")-> object med  @17168|channel(535,3)
						 method: ("detach")-> method detach  @62144|mediator(319,3)
						 output: (direct)-> object pdata  @24528|channel(540,19)
						 output: (direct)-> object (anon)  @22608|channel(540,8)
						MAKE
						 object: (direct)-> object deficit  @26128|channel(541,54)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --virtual
						 lead: ("io")-> object io  @17808|channel(535,3)
						 method: ("~write")-> abstract method ~write  @50208|channel(552,3)
						 input: ("id")-> object id  @23888|channel(535,3)
						 input: ("hq")-> object hq  @19728|channel(535,3)
						 input: ("seek")-> object seek  @21968|channel(535,3)
						 input: ("pdata")-> object pdata  @24528|channel(540,19)
						 input: ("offset")-> object offset  @28688|channel(537,18)
						 input: ("rsize")-> object rsize  @28048|channel(537,44)
						 output: (direct)-> object deficit  @26128|channel(541,54)
						 output: ("report")-> object report  @29968|channel(535,3)
						 output: ("note")-> object note  @31568|channel(535,3)
						MAKE
						 object: (direct)-> object (anon)  @21328|channel(542,13)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: ("deficit")-> object deficit  @26128|channel(541,54)
						 method: ("is_equal?")-> method is_equal?  @34336|int(64,3)
						 input: ("rsize")-> object rsize  @28048|channel(537,44)
						 output: (direct)-> object (anon)  @21328|channel(542,13)
						MAKE
						 object: (direct)-> object (anon)  @24848|channel(542,13)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> object (anon)  @21328|channel(542,13)
						 method: ("not")-> method not  @39376|bool(43,3)
						 output: (direct)-> object (anon)  @24848|channel(542,13)
						MAKE
						 literal: (direct)-> literal (anon)  @16528|channel(,) --'pending'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						MAKE
						 object: (direct)-> object (anon)  @21648|channel(542,43)
						 type: (direct)-> enum type channel_report  @04112|channel(160,11)
						CALL --initial
						 lead: (direct)-> object (anon)  @21648|channel(542,43)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @16528|channel(,)
						MAKE
						 object: (direct)-> object (anon)  @26768|channel(542,43)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL
						 lead: ("report")-> object report  @29968|channel(535,3)
						 method: ("is_equal?")-> method is_equal?  @01856|channel(160,11)
						 input: (direct)-> object (anon)  @21648|channel(542,43)
						 output: (direct)-> object (anon)  @26768|channel(542,43)
						MAKE
						 object: (direct)-> object (anon)  @16848|channel(542,43)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> object (anon)  @26768|channel(542,43)
						 method: ("not")-> method not  @39376|bool(43,3)
						 output: (direct)-> object (anon)  @16848|channel(542,43)
						MAKE
						 object: (direct)-> object (anon)  @18128|channel(542,11)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: (direct)-> object (anon)  @24848|channel(542,13)
						 method: ("or")-> method or  @41872|bool(37,3)
						 input: (direct)-> object (anon)  @16848|channel(542,43)
						 output: (direct)-> object (anon)  @18128|channel(542,11)
						IF
						 condition: (direct)-> object (anon)  @18128|channel(542,11)
						{
							true branch: BLOCK --domain
							{
								MAKE
								 literal: (direct)-> literal (anon)  @25168|channel(,) --'w'
								 type: ("expr")-> type expr  @18368|expr(5,6)
								MAKE
								 object: (direct)-> object (anon)  @31248|channel(542,72)
								 type: ("ascii")-> type ascii  @19552|ascii(5,6)
								CALL --initial, fundamental
								 lead: (direct)-> object (anon)  @31248|channel(542,72)
								 method: ("begin")-> method begin  @25872|ascii(108,3)
								 input: (direct)-> literal (anon)  @25168|channel(,)
								CALL
								 subroutine: ("update_mediator")-> subroutine update_mediator  @39360|channel(148,2)
								 input: ("med")-> object med  @17168|channel(535,3)
								 input: ("pdata")-> object pdata  @24528|channel(540,19)
								 input: ("offset")-> object offset  @28688|channel(537,18)
								 input: ("rsize")-> object rsize  @28048|channel(537,44)
								 input: ("deficit")-> object deficit  @26128|channel(541,54)
								 input: (direct)-> object (anon)  @31248|channel(542,72)
							}
						}
					}
					false branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @29648|channel(,) --'good'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("report")-> object report  @29968|channel(535,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @29648|channel(,)
					}
				}
			}
		}

		abstract method ~write  @50208|channel(552,3) --fraternal
		 key = async_channel_writer-0
		 viable = yes
	}

	type async_read_only_channel  @36064|channel(634,6) --external
	 from ("channel")-> type channel  @09248|channel(193,6)
	 from ("async_channel_reader")-> type async_channel_reader  @10400|channel(497,6)
	 viable = yes
	{
		method begin  @19504|channel(638,3) --external
		 viable = yes
		{

			given
			{
				object hch  @05088|channel(638,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @06368|channel(638,3) --internal
				 type: (direct)-> type async_read_only_channel  @36064|channel(634,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @00800|channel(640,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @06368|channel(638,3)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @00800|channel(640,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @00800|channel(640,6)
				 method: ("begin")-> method begin  @02032|channel(261,3)
				 input: ("hch")-> object hch  @05088|channel(638,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @06880|channel(641,6)
				 type: ("async_channel_reader")-> type async_channel_reader  @10400|channel(497,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @06368|channel(638,3)
				 method: (direct)-> method $18<20>( as_base<async_channel_reader> )  @17392|$appendix(,)
				 result: (direct)-> proxy (anon)  @06880|channel(641,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @06880|channel(641,6)
				 method: ("begin")-> method begin  @06192|channel(501,3)
			}
		}

		method end  @41936|channel(,) --internal
		 viable = yes
		{

			given
			{
				object io  @45680|channel(,) --internal
				 type: (direct)-> type async_read_only_channel  @36064|channel(634,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @11680|channel(,)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @45680|channel(,)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @11680|channel(,)
				CALL --terminal
				 lead: (direct)-> proxy (anon)  @11680|channel(,)
				 method: (direct)-> method end  @06608|channel(338,3)
			}
		}

		abstract method ~read  @51200|channel(647,11) --fraternal
		 key = async_channel_reader-0
		 viable = yes
		{

			given
			{
				object deficit  @58464|channel(647,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object hq  @63264|channel(647,11) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @06688|channel(647,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @64224|channel(647,11) --internal
				 type: (direct)-> type async_read_only_channel  @36064|channel(634,6)

				object note  @63584|channel(647,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @05728|channel(647,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @63904|channel(647,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @62944|channel(647,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @05408|channel(647,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @64864|channel(647,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @07184|channel(649,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @64224|channel(647,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @07184|channel(649,6)
				MAKE
				 literal: (direct)-> literal (anon)  @00288|channel(,) --'r'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @58720|channel(649,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @58720|channel(649,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @00288|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @07184|channel(649,6)
				 method: ("execute_async")-> method execute_async  @02448|channel(302,3)
				 input: ("id")-> object id  @06688|channel(647,11)
				 input: ("hq")-> object hq  @63264|channel(647,11)
				 input: (direct)-> object (anon)  @58720|channel(649,23)
				 input: ("seek")-> object seek  @05408|channel(647,11)
				 input: ("pdata")-> object pdata  @63904|channel(647,11)
				 input: ("offset")-> object offset  @05728|channel(647,11)
				 input: ("size")-> object size  @64864|channel(647,11)
				 output: ("deficit")-> object deficit  @58464|channel(647,11)
				 output: ("report")-> object report  @62944|channel(647,11)
				 output: ("note")-> object note  @63584|channel(647,11)
			}
		}
	}

	type async_read_write_channel  @31840|channel(678,6) --external
	 from ("channel")-> type channel  @09248|channel(193,6)
	 from ("async_channel_reader")-> type async_channel_reader  @10400|channel(497,6)
	 from ("async_channel_writer")-> type async_channel_writer  @34144|channel(527,6)
	 viable = yes
	{
		method begin  @21584|channel(682,3) --external
		 viable = yes
		{

			given
			{
				object hch  @04640|channel(682,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @14240|channel(682,3) --internal
				 type: (direct)-> type async_read_write_channel  @31840|channel(678,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @01712|channel(684,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @14240|channel(682,3)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @01712|channel(684,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @01712|channel(684,6)
				 method: ("begin")-> method begin  @02032|channel(261,3)
				 input: ("hch")-> object hch  @04640|channel(682,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @06576|channel(685,6)
				 type: ("async_channel_reader")-> type async_channel_reader  @10400|channel(497,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @14240|channel(682,3)
				 method: (direct)-> method $18<20>( as_base<async_channel_reader> )  @17392|$appendix(,)
				 result: (direct)-> proxy (anon)  @06576|channel(685,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @06576|channel(685,6)
				 method: ("begin")-> method begin  @06192|channel(501,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @07488|channel(686,6)
				 type: ("async_channel_writer")-> type async_channel_writer  @34144|channel(527,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @14240|channel(682,3)
				 method: (direct)-> method $18<21>( as_base<async_channel_writer> )  @29040|$appendix(,)
				 result: (direct)-> proxy (anon)  @07488|channel(686,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @07488|channel(686,6)
				 method: ("begin")-> method begin  @18256|channel(531,3)
			}
		}

		method end  @42352|channel(,) --internal
		 viable = yes
		{

			given
			{
				object io  @50480|channel(,) --internal
				 type: (direct)-> type async_read_write_channel  @31840|channel(678,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @15328|channel(,)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @50480|channel(,)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @15328|channel(,)
				CALL --terminal
				 lead: (direct)-> proxy (anon)  @15328|channel(,)
				 method: (direct)-> method end  @06608|channel(338,3)
			}
		}

		abstract method ~read  @54176|channel(692,11) --fraternal
		 key = async_channel_reader-0
		 viable = yes
		{

			given
			{
				object deficit  @10080|channel(692,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object hq  @14560|channel(692,11) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @11680|channel(692,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @09120|channel(692,11) --internal
				 type: (direct)-> type async_read_write_channel  @31840|channel(678,6)

				object note  @12000|channel(692,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @12320|channel(692,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @07200|channel(692,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @07840|channel(692,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @14880|channel(692,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @15200|channel(692,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @01408|channel(694,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @09120|channel(692,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @01408|channel(694,6)
				MAKE
				 literal: (direct)-> literal (anon)  @10400|channel(,) --'r'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @59040|channel(694,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @59040|channel(694,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @10400|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @01408|channel(694,6)
				 method: ("execute_async")-> method execute_async  @02448|channel(302,3)
				 input: ("id")-> object id  @11680|channel(692,11)
				 input: ("hq")-> object hq  @14560|channel(692,11)
				 input: (direct)-> object (anon)  @59040|channel(694,23)
				 input: ("seek")-> object seek  @14880|channel(692,11)
				 input: ("pdata")-> object pdata  @07200|channel(692,11)
				 input: ("offset")-> object offset  @12320|channel(692,11)
				 input: ("size")-> object size  @15200|channel(692,11)
				 output: ("deficit")-> object deficit  @10080|channel(692,11)
				 output: ("report")-> object report  @07840|channel(692,11)
				 output: ("note")-> object note  @12000|channel(692,11)
			}
		}

		abstract method ~write  @55168|channel(701,11) --fraternal
		 key = async_channel_writer-0
		 viable = yes
		{

			given
			{
				object deficit  @04960|channel(701,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object hq  @12640|channel(701,11) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @09760|channel(701,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @13600|channel(701,11) --internal
				 type: (direct)-> type async_read_write_channel  @31840|channel(678,6)

				object note  @08160|channel(701,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @13280|channel(701,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @10720|channel(701,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @16160|channel(701,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @12960|channel(701,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @05920|channel(701,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @05664|channel(703,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @13600|channel(701,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @05664|channel(703,6)
				MAKE
				 literal: (direct)-> literal (anon)  @08800|channel(,) --'w'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @59360|channel(703,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @59360|channel(703,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @08800|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @05664|channel(703,6)
				 method: ("execute_async")-> method execute_async  @02448|channel(302,3)
				 input: ("id")-> object id  @09760|channel(701,11)
				 input: ("hq")-> object hq  @12640|channel(701,11)
				 input: (direct)-> object (anon)  @59360|channel(703,23)
				 input: ("seek")-> object seek  @12960|channel(701,11)
				 input: ("pdata")-> object pdata  @10720|channel(701,11)
				 input: ("offset")-> object offset  @13280|channel(701,11)
				 input: ("size")-> object size  @05920|channel(701,11)
				 output: ("deficit")-> object deficit  @04960|channel(701,11)
				 output: ("report")-> object report  @16160|channel(701,11)
				 output: ("note")-> object note  @08160|channel(701,11)
			}
		}
	}

	type async_write_only_channel  @34912|channel(656,6) --external
	 from ("channel")-> type channel  @09248|channel(193,6)
	 from ("async_channel_writer")-> type async_channel_writer  @34144|channel(527,6)
	 viable = yes
	{
		method begin  @19920|channel(660,3) --external
		 viable = yes
		{

			given
			{
				object hch  @58784|channel(660,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @59424|channel(660,3) --internal
				 type: (direct)-> type async_write_only_channel  @34912|channel(656,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @06272|channel(662,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @59424|channel(660,3)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @06272|channel(662,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @06272|channel(662,6)
				 method: ("begin")-> method begin  @02032|channel(261,3)
				 input: ("hch")-> object hch  @58784|channel(660,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @64800|channel(663,6)
				 type: ("async_channel_writer")-> type async_channel_writer  @34144|channel(527,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @59424|channel(660,3)
				 method: (direct)-> method $18<21>( as_base<async_channel_writer> )  @29040|$appendix(,)
				 result: (direct)-> proxy (anon)  @64800|channel(663,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @64800|channel(663,6)
				 method: ("begin")-> method begin  @18256|channel(531,3)
			}
		}

		method end  @42768|channel(,) --internal
		 viable = yes
		{

			given
			{
				object io  @49840|channel(,) --internal
				 type: (direct)-> type async_write_only_channel  @34912|channel(656,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @14112|channel(,)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @49840|channel(,)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @14112|channel(,)
				CALL --terminal
				 lead: (direct)-> proxy (anon)  @14112|channel(,)
				 method: (direct)-> method end  @06608|channel(338,3)
			}
		}

		abstract method ~write  @53680|channel(669,11) --fraternal
		 key = async_channel_writer-0
		 viable = yes
		{

			given
			{
				object deficit  @60704|channel(669,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object hq  @07648|channel(669,11) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @07008|channel(669,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @57824|channel(669,11) --internal
				 type: (direct)-> type async_write_only_channel  @34912|channel(656,6)

				object note  @01248|channel(669,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @59744|channel(669,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @65504|channel(669,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @61344|channel(669,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @00928|channel(669,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @00608|channel(669,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @57808|channel(671,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @57824|channel(669,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @57808|channel(671,6)
				MAKE
				 literal: (direct)-> literal (anon)  @13920|channel(,) --'w'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @60000|channel(671,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @60000|channel(671,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @13920|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @57808|channel(671,6)
				 method: ("execute_async")-> method execute_async  @02448|channel(302,3)
				 input: ("id")-> object id  @07008|channel(669,11)
				 input: ("hq")-> object hq  @07648|channel(669,11)
				 input: (direct)-> object (anon)  @60000|channel(671,23)
				 input: ("seek")-> object seek  @00928|channel(669,11)
				 input: ("pdata")-> object pdata  @65504|channel(669,11)
				 input: ("offset")-> object offset  @59744|channel(669,11)
				 input: ("size")-> object size  @00608|channel(669,11)
				 output: ("deficit")-> object deficit  @60704|channel(669,11)
				 output: ("report")-> object report  @61344|channel(669,11)
				 output: ("note")-> object note  @01248|channel(669,11)
			}
		}
	}

	type channel  @09248|channel(193,6) --external
	 viable = yes
	{
		method begin  @02032|channel(261,3) --external
		 viable = yes
		{

			given
			{
				object hch  @18160|channel(261,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @20400|channel(261,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)
			}

			BLOCK --domain
			{
				CALL --initial, fundamental
				 lead: ("io.hch")-> object hch  @43120|channel(364,3)
				 method: ("begin")-> method begin  @38912|handle(25,3)
				 input: ("hch")-> object hch  @18160|channel(261,3)
				CALL --initial
				 lead: ("io.lock")-> object lock  @39280|channel(365,3)
				 method: ("begin")-> method begin  @11008|toggle(37,3)
				CALL --initial, fundamental
				 lead: ("io.open")-> object open  @42160|channel(366,3)
				 method: ("begin")-> method begin  @42288|bool(26,3)
				 input: ("true")-> object true  @44400|conventional(22,2)
			}
		}

		method check  @11600|channel(274,3) --external
		 viable = yes
		{

			given
			{
				object io  @21040|channel(274,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)

				object note  @21360|channel(274,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io.lock")-> object lock  @39280|channel(365,3)
				 method: ("wait")-> method wait  @08928|toggle(42,3)
				MAKE
				 object: (direct)-> object (anon)  @21680|channel(277,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("io.open")-> object open  @42160|channel(366,3)
				 method: ("not")-> method not  @39376|bool(43,3)
				 output: (direct)-> object (anon)  @21680|channel(277,10)
				IF
				 condition: (direct)-> object (anon)  @21680|channel(277,10)
				{
					true branch: CALL --initial, fundamental
					 lead: ("note")-> object note  @21360|channel(274,3)
					 method: ("begin")-> method begin  @31088|string(59,3)
					 input: ("io.note")-> object note  @39600|channel(367,3)
				}
				CALL
				 lead: ("io.lock")-> object lock  @39280|channel(365,3)
				 method: ("release")-> method release  @13088|toggle(47,3)
			}
		}

		method close  @03696|channel(268,3) --external
		 viable = yes
		{

			given
			{
				object io  @20720|channel(268,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)

				object note  @18480|channel(268,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object other  @23600|channel(268,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy ~note  @64192|channel(270,4)
				 type: ("string")-> type string  @11552|string(4,6)
				 permission: [eval]
				CALL
				 subroutine: (direct)-> subroutine $22<23>( fix<string> )  @61088|$appendix(,)
				 input: ("note")-> object note  @18480|channel(268,3)
				 input: ("normal_close")-> object normal_close  @39920|channel(357,3)
				 result: (direct)-> proxy ~note  @64192|channel(270,4)
				CALL
				 lead: (direct)-> object io  @20720|channel(268,3)
				 method: ("internal_close")-> method internal_close  @04944|channel(318,3)
				 input: ("~note")-> proxy ~note  @64192|channel(270,4)
				 output: ("other")-> object other  @23600|channel(268,3)
			}
		}

		method end  @06608|channel(338,3) --internal
		 viable = yes
		{

			given
			{
				object io  @56144|channel(338,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)
			}

			BLOCK --domain
			{
				IF
				 condition: ("io.open")-> object open  @42160|channel(366,3)
				{
					true branch: CALL --compatible
					 subroutine: ("kernel\channel_close")-> subroutine channel_close  @01616|channel(194,2)
					 input: ("io.hch")-> object hch  @43120|channel(364,3)
				}
			}
		}

		method execute_async  @02448|channel(302,3) --fraternal
		 viable = yes
		{

			given
			{
				object action  @51024|channel(302,3) --internal
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)

				object deficit  @46864|channel(302,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object hq  @44304|channel(302,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object id  @49424|channel(302,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @52624|channel(302,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)

				object note  @44624|channel(302,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @51664|channel(302,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @56464|channel(302,3) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @49744|channel(302,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @52944|channel(302,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @47504|channel(302,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io")-> object io  @52624|channel(302,3)
				 method: ("check")-> method check  @11600|channel(274,3)
				 output: ("note")-> object note  @44624|channel(302,3)
				MAKE
				 object: (direct)-> object (anon)  @52304|channel(305,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("note")-> object note  @44624|channel(302,3)
				 method: ("is_null?")-> method is_null?  @41904|object(34,3)
				 output: (direct)-> object (anon)  @52304|channel(305,10)
				IF
				 condition: (direct)-> object (anon)  @52304|channel(305,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object (anon)  @43344|channel(307,21)
						 type: ("request")-> type request  @08864|channel(16,13)
						CALL --initial
						 lead: (direct)-> object (anon)  @43344|channel(307,21)
						 method: ("begin")-> method begin  @09104|channel(42,3)
						 input: ("action")-> object action  @51024|channel(302,3)
						 input: ("pdata")-> object pdata  @56464|channel(302,3)
						 input: ("offset")-> object offset  @51664|channel(302,3)
						 input: ("size")-> object size  @47504|channel(302,3)
						 input: ("seek")-> object seek  @52944|channel(302,3)
						 input: ("id")-> object id  @49424|channel(302,3)
						MAKE
						 object: (direct)-> object pr  @53264|channel(307,79)
						 type: ("addr")-> type addr  @44496|addr(4,6)
						CALL
						 subroutine: ("format_request")-> subroutine format_request  @38960|channel(137,2)
						 input: (direct)-> object (anon)  @43344|channel(307,21)
						 output: (direct)-> object pr  @53264|channel(307,79)
						CALL --compatible
						 subroutine: ("kernel\channel_async_io")-> subroutine channel_async_io  @01216|channel(192,2)
						 input: ("io.hch")-> object hch  @43120|channel(364,3)
						 input: ("pr")-> object pr  @53264|channel(307,79)
						 input: ("hq")-> object hq  @44304|channel(302,3)
						CALL
						 lead: ("io")-> object io  @52624|channel(302,3)
						 method: ("finish")-> method finish  @65488|channel(343,3)
						 input: ("pr")-> object pr  @53264|channel(307,79)
						 output: ("deficit")-> object deficit  @46864|channel(302,3)
						 output: ("report")-> object report  @49744|channel(302,3)
						 output: ("note")-> object note  @44624|channel(302,3)
					}
					false branch: BLOCK --domain
					{
						CALL --initial, fundamental
						 lead: ("deficit")-> object deficit  @46864|channel(302,3)
						 method: ("begin")-> method begin  @31840|int(54,3)
						 input: ("size")-> object size  @47504|channel(302,3)
						MAKE
						 literal: (direct)-> literal (anon)  @55184|channel(,) --'closed'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("report")-> object report  @49744|channel(302,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @55184|channel(,)
					}
				}
			}
		}

		method execute_sync  @14512|channel(285,3) --fraternal
		 viable = yes
		{

			given
			{
				object action  @22960|channel(285,3) --internal
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)

				object deficit  @51344|channel(285,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @22000|channel(285,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)

				object note  @45904|channel(285,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @51984|channel(285,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @16560|channel(285,3) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @41104|channel(285,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @23280|channel(285,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @55824|channel(285,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @22640|channel(285,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io")-> object io  @22000|channel(285,3)
				 method: ("check")-> method check  @11600|channel(274,3)
				 output: ("note")-> object note  @45904|channel(285,3)
				MAKE
				 object: (direct)-> object (anon)  @42064|channel(288,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("note")-> object note  @45904|channel(285,3)
				 method: ("is_null?")-> method is_null?  @41904|object(34,3)
				 output: (direct)-> object (anon)  @42064|channel(288,10)
				IF
				 condition: (direct)-> object (anon)  @42064|channel(288,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object (anon)  @56784|channel(290,27)
						 type: ("etm")-> type etm  @17984|etm(5,6)
						CALL --initial, fundamental
						 lead: (direct)-> object (anon)  @56784|channel(290,27)
						 method: ("begin")-> method begin  @33872|etm(71,3)
						 input: ("int_max")-> object int_max  @38320|conventional(32,2)
						MAKE
						 proxy: (direct)-> proxy ~wait  @62064|channel(290,5)
						 type: ("etm")-> type etm  @17984|etm(5,6)
						 permission: [eval]
						CALL
						 subroutine: (direct)-> subroutine $22<24>( fix<etm> )  @61888|$appendix(,)
						 input: ("wait")-> object wait  @22640|channel(285,3)
						 input: (direct)-> object (anon)  @56784|channel(290,27)
						 result: (direct)-> proxy ~wait  @62064|channel(290,5)
						MAKE
						 object: (direct)-> object (anon)  @43984|channel(291,21)
						 type: ("request")-> type request  @08864|channel(16,13)
						CALL --initial
						 lead: (direct)-> object (anon)  @43984|channel(291,21)
						 method: ("begin")-> method begin  @09104|channel(42,3)
						 input: ("action")-> object action  @22960|channel(285,3)
						 input: ("pdata")-> object pdata  @16560|channel(285,3)
						 input: ("offset")-> object offset  @51984|channel(285,3)
						 input: ("size")-> object size  @55824|channel(285,3)
						 input: ("seek")-> object seek  @23280|channel(285,3)
						 input: (pending)->
						MAKE
						 object: (direct)-> object pr  @48144|channel(291,81)
						 type: ("addr")-> type addr  @44496|addr(4,6)
						CALL
						 subroutine: ("format_request")-> subroutine format_request  @38960|channel(137,2)
						 input: (direct)-> object (anon)  @43984|channel(291,21)
						 output: (direct)-> object pr  @48144|channel(291,81)
						MAKE
						 proxy: (direct)-> proxy (anon)  @65104|channel(292,46)
						 type: ("int")-> type int  @21536|int(6,6)
						 permission: [eval]
						CALL --fundamental
						 lead: ("~wait")-> proxy ~wait  @62064|channel(290,5)
						 method: ("as_int")-> method as_int  @32208|etm(84,3)
						 result: (direct)-> proxy (anon)  @65104|channel(292,46)
						CALL --compatible
						 subroutine: ("kernel\channel_sync_io")-> subroutine channel_sync_io  @05616|channel(190,2)
						 input: ("io.hch")-> object hch  @43120|channel(364,3)
						 input: ("pr")-> object pr  @48144|channel(291,81)
						 input: (direct)-> proxy (anon)  @65104|channel(292,46)
						CALL
						 lead: ("io")-> object io  @22000|channel(285,3)
						 method: ("finish")-> method finish  @65488|channel(343,3)
						 input: ("pr")-> object pr  @48144|channel(291,81)
						 output: ("deficit")-> object deficit  @51344|channel(285,3)
						 output: ("report")-> object report  @41104|channel(285,3)
						 output: ("note")-> object note  @45904|channel(285,3)
					}
					false branch: BLOCK --domain
					{
						CALL --initial, fundamental
						 lead: ("deficit")-> object deficit  @51344|channel(285,3)
						 method: ("begin")-> method begin  @31840|int(54,3)
						 input: ("size")-> object size  @55824|channel(285,3)
						MAKE
						 literal: (direct)-> literal (anon)  @43024|channel(,) --'closed'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("report")-> object report  @41104|channel(285,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @43024|channel(,)
					}
				}
			}
		}

		method finish  @65488|channel(343,3) --internal
		 viable = yes
		{

			given
			{
				object deficit  @46224|channel(343,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @53904|channel(343,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)

				object note  @54544|channel(343,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object pr  @41424|channel(343,3) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @41744|channel(343,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @50064|channel(345,28)
				 type: ("request")-> type request  @08864|channel(16,13)
				CALL
				 subroutine: ("restore_request")-> subroutine restore_request  @43760|channel(142,2)
				 input: ("pr")-> object pr  @41424|channel(343,3)
				 output: (direct)-> object (anon)  @50064|channel(345,28)
				CALL
				 lead: (direct)-> object (anon)  @50064|channel(345,28)
				 method: ("get_group2")-> method get_group2  @12848|channel(77,3)
				 output: ("deficit")-> object deficit  @46224|channel(343,3)
				 output: ("report")-> object report  @41744|channel(343,3)
				 output: ("note")-> object note  @54544|channel(343,3)
				MAKE
				 literal: (direct)-> literal (anon)  @42384|channel(,) --'error'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @42704|channel(346,10)
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)
				CALL --initial
				 lead: (direct)-> object (anon)  @42704|channel(346,10)
				 method: ("begin")-> method begin  @13920|channel(160,11)
				 input: (direct)-> literal (anon)  @42384|channel(,)
				MAKE
				 object: (direct)-> object (anon)  @54864|channel(346,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL
				 lead: ("report")-> object report  @41744|channel(343,3)
				 method: ("is_equal?")-> method is_equal?  @01856|channel(160,11)
				 input: (direct)-> object (anon)  @42704|channel(346,10)
				 output: (direct)-> object (anon)  @54864|channel(346,10)
				IF
				 condition: (direct)-> object (anon)  @54864|channel(346,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 proxy: (direct)-> proxy ~note  @60544|channel(348,5)
						 type: ("string")-> type string  @11552|string(4,6)
						 permission: [eval]
						CALL
						 subroutine: (direct)-> subroutine $22<23>( fix<string> )  @61088|$appendix(,)
						 input: ("note")-> object note  @54544|channel(343,3)
						 input: ("unspecified_error")-> object unspecified_error  @45040|channel(359,3)
						 result: (direct)-> proxy ~note  @60544|channel(348,5)
						MAKE
						 object: (direct)-> object og_note  @54224|channel(349,33)
						 type: ("string")-> type string  @11552|string(4,6)
						CALL
						 lead: ("io")-> object io  @53904|channel(343,3)
						 method: ("internal_close")-> method internal_close  @04944|channel(318,3)
						 input: ("~note")-> proxy ~note  @60544|channel(348,5)
						 output: (direct)-> object og_note  @54224|channel(349,33)
						MAKE
						 object: (direct)-> object (anon)  @43664|channel(350,11)
						 type: ("bool")-> type bool  @19936|bool(5,6)
						CALL --fundamental
						 lead: ("og_note")-> object og_note  @54224|channel(349,33)
						 method: ("is_not_null?")-> method is_not_null?  @42320|object(36,3)
						 output: (direct)-> object (anon)  @43664|channel(350,11)
						IF
						 condition: (direct)-> object (anon)  @43664|channel(350,11)
						{
							true branch: BLOCK --domain
							{
								CALL --terminal, fundamental
								 lead: ("note")-> object note  @54544|channel(343,3)
								 method: ("recycle")-> method recycle  @42736|object(38,3)
								CALL --initial, fundamental
								 lead: ("note")-> object note  @54544|channel(343,3)
								 method: ("begin")-> method begin  @31088|string(59,3)
								 input: ("og_note")-> object og_note  @54224|channel(349,33)
							}
						}
					}
				}
			}
		}

		method internal_close  @04944|channel(318,3) --fraternal
		 viable = yes
		{

			given
			{
				object io  @48464|channel(318,3) --internal
				 type: (direct)-> type channel  @09248|channel(193,6)

				object note  @55504|channel(318,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object other  @53584|channel(318,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)
			}

			BLOCK --domain
			{
				CALL
				 lead: ("io.lock")-> object lock  @39280|channel(365,3)
				 method: ("wait")-> method wait  @08928|toggle(42,3)
				IF
				 condition: ("io.open")-> object open  @42160|channel(366,3)
				{
					true branch: BLOCK --domain
					{
						CALL --fundamental
						 lead: ("io.open")-> object open  @42160|channel(366,3)
						 method: ("not")-> method not  @38544|bool(42,3)
						CALL --initial, fundamental
						 lead: ("io.note")-> object note  @39600|channel(367,3)
						 method: ("begin")-> method begin  @31088|string(59,3)
						 input: ("note")-> object note  @55504|channel(318,3)
						CALL
						 lead: ("io.lock")-> object lock  @39280|channel(365,3)
						 method: ("release")-> method release  @13088|toggle(47,3)
						CALL --compatible
						 subroutine: ("kernel\channel_close")-> subroutine channel_close  @01616|channel(194,2)
						 input: ("io.hch")-> object hch  @43120|channel(364,3)
					}
					false branch: BLOCK --domain
					{
						CALL
						 lead: ("io.lock")-> object lock  @39280|channel(365,3)
						 method: ("release")-> method release  @13088|toggle(47,3)
						CALL --initial, fundamental
						 lead: ("other")-> object other  @53584|channel(318,3)
						 method: ("begin")-> method begin  @31088|string(59,3)
						 input: ("io.note")-> object note  @39600|channel(367,3)
					}
				}
			}
		}

		common
		{
			subroutine $start1  @36016|channel(,) --internal
			 viable = yes
			{

				given
				{
				}

				BLOCK --domain
				{
					MAKE
					 object: (direct)-> object normal_close  @39920|channel(357,3) --'normal close'
					 type: ("string")-> type string  @11552|string(4,6)
					MAKE
					 literal: (direct)-> literal (anon)  @44944|channel(,) --'normal close'
					 type: ("expr")-> type expr  @18368|expr(5,6)
					CALL --initial, fundamental
					 lead: (direct)-> object normal_close  @39920|channel(357,3)
					 method: ("begin")-> method begin  @31504|string(57,3)
					 input: (direct)-> literal (anon)  @44944|channel(,)
					 input: (pending)->
					 input: (pending)->
					MAKE
					 object: (direct)-> object unspecified_error  @45040|channel(359,3) --'unspecified channel error'
					 type: ("string")-> type string  @11552|string(4,6)
					MAKE
					 literal: (direct)-> literal (anon)  @46544|channel(,) --'unspecified channel error'
					 type: ("expr")-> type expr  @18368|expr(5,6)
					CALL --initial, fundamental
					 lead: (direct)-> object unspecified_error  @45040|channel(359,3)
					 method: ("begin")-> method begin  @31504|string(57,3)
					 input: (direct)-> literal (anon)  @46544|channel(,)
					 input: (pending)->
					 input: (pending)->
				}
			}

			object normal_close  @39920|channel(357,3) --internal
			 type: ("string")-> type string  @11552|string(4,6)

			object unspecified_error  @45040|channel(359,3) --internal
			 type: ("string")-> type string  @11552|string(4,6)
		}


		instance
		{
			object hch  @43120|channel(364,3) --internal
			 type: ("handle")-> type handle  @23456|handle(5,6)

			object lock  @39280|channel(365,3) --internal
			 type: ("toggle")-> type toggle  @29152|toggle(5,6)

			object note  @39600|channel(367,3) --internal
			 type: ("string")-> type string  @11552|string(4,6)

			object open  @42160|channel(366,3) --internal
			 type: ("bool")-> type bool  @19936|bool(5,6)
		}

	}

	enum type channel_report  @04112|channel(160,11) --external
	 from ("enumerated")-> type enumerated  @17216|enumerated(4,6)
	 viable = yes
	{
	    'good' = 0
	    'pending' = 1
	    'busy' = 2
	    'closed' = 3
	    'retry' = 4
	    'end' = 5
	    'error' = 6
	    'other' = 7
	}
	{
		method begin  @13920|channel(160,11) --external
		 viable = yes
		{

			given
			{
				object expr  @58448|channel(160,11) --internal
				 type: ("expr")-> type expr  @18368|expr(5,6)

				object io  @63888|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @64208|channel(,)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: (direct)-> enumerator $index  @52640|channel(,)
				 method: ("enumerate")-> method enumerate  @16832|$appendix(,)
				 input: (direct)-> object expr  @58448|channel(160,11)
				 output: (direct)-> object (anon)  @64208|channel(,)
				MAKE
				 proxy: (direct)-> proxy (anon)  @59632|channel(,)
				 type: ("enumerated")-> type enumerated  @17216|enumerated(4,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @63888|channel(160,11)
				 method: (direct)-> method $18<25>( as_base<enumerated> )  @21968|$appendix(,)
				 result: (direct)-> proxy (anon)  @59632|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> proxy (anon)  @59632|channel(,)
				 method: ("begin")-> method begin  @14128|enumerated(29,3)
				 input: (direct)-> object (anon)  @64208|channel(,)
				CALL --initial, fundamental
				 lead: ("io.expr")-> object expr  @35232|channel(,)
				 method: ("begin")-> method begin  @65024|expr(88,3)
				 input: (direct)-> object expr  @58448|channel(160,11)
			}
		}

		method begin  @09760|channel(160,11) --external
		 viable = yes
		{

			given
			{
				object channel_report  @63568|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)

				object io  @58768|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @61088|channel(,)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL --fundamental
				 lead: (direct)-> object channel_report  @63568|channel(160,11)
				 method: ("use_code")-> method use_code  @34288|enumerated(31,3)
				 result: (direct)-> proxy (anon)  @61088|channel(,)
				MAKE
				 proxy: (direct)-> proxy (anon)  @61152|channel(,)
				 type: ("enumerated")-> type enumerated  @17216|enumerated(4,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @58768|channel(160,11)
				 method: (direct)-> method $18<25>( as_base<enumerated> )  @21968|$appendix(,)
				 result: (direct)-> proxy (anon)  @61152|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> proxy (anon)  @61152|channel(,)
				 method: ("begin")-> method begin  @14128|enumerated(29,3)
				 input: (direct)-> proxy (anon)  @61088|channel(,)
				CALL --initial, fundamental
				 lead: ("io.expr")-> object expr  @35232|channel(,)
				 method: ("begin")-> method begin  @65024|expr(88,3)
				 input: ("channel_report.expr")-> object expr  @35232|channel(,)
			}
		}

		method get_token  @06432|channel(160,11) --external
		 viable = yes
		{

			given
			{
				object expr  @61008|channel(160,11) --internal
				 type: ("expr")-> type expr  @18368|expr(5,6)

				object io  @60688|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)
			}

			BLOCK --domain
			{
				CALL --initial, fundamental
				 lead: (direct)-> object expr  @61008|channel(160,11)
				 method: ("begin")-> method begin  @65024|expr(88,3)
				 input: ("io.expr")-> object expr  @35232|channel(,)
			}
		}

		method is_before?  @05184|channel(160,11) --external
		 viable = yes
		{

			given
			{
				object bool  @59728|channel(160,11) --internal
				 type: ("bool")-> type bool  @19936|bool(5,6)

				object channel_report  @59088|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)

				object io  @61968|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @16112|channel(,)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL --fundamental
				 lead: (direct)-> object channel_report  @59088|channel(160,11)
				 method: ("use_code")-> method use_code  @34288|enumerated(31,3)
				 result: (direct)-> proxy (anon)  @16112|channel(,)
				MAKE
				 proxy: (direct)-> proxy (anon)  @35424|channel(,)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL --fundamental
				 lead: (direct)-> object io  @61968|channel(160,11)
				 method: ("use_code")-> method use_code  @34288|enumerated(31,3)
				 result: (direct)-> proxy (anon)  @35424|channel(,)
				CALL --fundamental
				 lead: (direct)-> proxy (anon)  @35424|channel(,)
				 method: ("is_before?")-> method is_before?  @34752|int(66,3)
				 input: (direct)-> proxy (anon)  @16112|channel(,)
				 output: (direct)-> object bool  @59728|channel(160,11)
			}
		}

		method is_equal?  @01856|channel(160,11) --external
		 viable = yes
		{

			given
			{
				object bool  @65168|channel(160,11) --internal
				 type: ("bool")-> type bool  @19936|bool(5,6)

				object channel_report  @62288|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)

				object io  @64848|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @04448|channel(,)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL --fundamental
				 lead: (direct)-> object channel_report  @62288|channel(160,11)
				 method: ("use_code")-> method use_code  @34288|enumerated(31,3)
				 result: (direct)-> proxy (anon)  @04448|channel(,)
				MAKE
				 proxy: (direct)-> proxy (anon)  @24560|channel(,)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL --fundamental
				 lead: (direct)-> object io  @64848|channel(160,11)
				 method: ("use_code")-> method use_code  @34288|enumerated(31,3)
				 result: (direct)-> proxy (anon)  @24560|channel(,)
				CALL --fundamental
				 lead: (direct)-> proxy (anon)  @24560|channel(,)
				 method: ("is_equal?")-> method is_equal?  @34336|int(64,3)
				 input: (direct)-> proxy (anon)  @04448|channel(,)
				 output: (direct)-> object bool  @65168|channel(160,11)
			}
		}

		method use_token  @13504|channel(160,11) --external
		 viable = yes
		{

			given
			{
				object io  @60368|channel(160,11) --internal
				 type: (direct)-> enum type channel_report  @04112|channel(160,11)

				proxy ~t  @64288|channel(160,11) --internal
				 type: ("expr")-> type expr  @18368|expr(5,6)
			}

			BLOCK --domain
			{
				JOIN
				 left: (direct)-> proxy ~t  @64288|channel(160,11)
				 right: ("io.expr")-> object expr  @35232|channel(,)
			}
		}

		common
		{
			enumerator $index  @52640|channel(,) --internal
			 type: (direct)-> type $1<2>( <expr>enumerator )  @34064|$appendix(,)

			subroutine $start1  @32416|channel(,) --internal
			 viable = yes
			{

				given
				{
				}

				BLOCK --domain
				{
					MAKE
					 enumerator: ("near\$index")-> enumerator $index  @52640|channel(,)
					 type: (direct)-> type $1<2>( <expr>enumerator )  @34064|$appendix(,)
				}
			}
		}


		instance
		{
			object expr  @35232|channel(,) --internal
			 type: ("expr")-> type expr  @18368|expr(5,6)
		}

	}

	subroutine format_request  @38960|channel(137,2) --internal
	 viable = yes
	{

		given
		{
			object pr  @38416|channel(137,2) --internal
			 type: ("addr")-> type addr  @44496|addr(4,6)

			object r  @32976|channel(137,2) --internal
			 type: ("request")-> type request  @08864|channel(16,13)
		}

		BLOCK --domain
		{
			MAKE
			 object: (direct)-> object (anon)  @38736|channel(139,3)
			 type: ("mediator")-> type mediator  @22304|mediator(21,6)
			CALL --initial, fundamental
			 lead: (direct)-> object (anon)  @38736|channel(139,3)
			 method: ("begin")-> method begin  @60480|mediator(307,3)
			 input: (pending)->
			 input: (pending)->
			MAKE
			 literal: (direct)-> literal (anon)  @37136|channel(,) --'b'
			 type: ("expr")-> type expr  @18368|expr(5,6)
			CALL --fundamental
			 lead: (direct)-> object (anon)  @38736|channel(139,3)
			 method: (direct)-> method $16<17>( fwrite<request> )  @23632|$appendix(,)
			 input: ("r")-> object r  @32976|channel(137,2)
			 input: (direct)-> literal (anon)  @37136|channel(,)
			MAKE
			 object: (direct)-> object (anon)  @33296|channel(139,43)
			 type: ("int")-> type int  @21536|int(6,6)
			CALL --fundamental
			 lead: (direct)-> object (anon)  @38736|channel(139,3)
			 method: ("detach")-> method detach  @62144|mediator(319,3)
			 output: ("pr")-> object pr  @38416|channel(137,2)
			 output: (direct)-> object (anon)  @33296|channel(139,43)
		}
	}

	type request  @08864|channel(16,13) --internal
	 viable = yes
	{
		subroutine ascii_to_word  @44160|channel(107,3) --internal
		 viable = yes
		{

			given
			{
				object a  @34576|channel(107,3) --internal
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)

				object w  @36176|channel(107,3) --internal
				 type: (direct)-> type $3<'8'>( word<'8'> )  @37136|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @18112|channel(109,14)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL --fundamental
				 lead: ("a")-> object a  @34576|channel(107,3)
				 method: ("use_code")-> method use_code  @34288|enumerated(31,3)
				 result: (direct)-> proxy (anon)  @18112|channel(109,14)
				MAKE
				 literal: (direct)-> literal (anon)  @39376|channel(,) --'b:ascii'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				CALL --initial, fundamental
				 lead: ("w")-> object w  @36176|channel(107,3)
				 method: ("begin")-> method begin  @18912|$appendix(,)
				 input: (direct)-> proxy (anon)  @18112|channel(109,14)
				 input: (direct)-> literal (anon)  @39376|channel(,)
			}
		}

		method begin  @15760|channel(28,3) --external
		 viable = yes
		{

			given
			{
				object io  @03040|channel(28,3) --internal
				 type: (direct)-> type request  @08864|channel(16,13)
			}

			BLOCK --domain
			{
				CALL --initial, fundamental
				 lead: ("io.action")-> object action  @32992|channel(116,3)
				 method: ("begin")-> method begin  @18496|$appendix(,)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.pdata")-> object pdata  @35872|channel(117,3)
				 method: ("begin")-> method begin  @46672|addr(34,3)
				CALL --initial, fundamental
				 lead: ("io.offset")-> object offset  @33312|channel(118,3)
				 method: ("begin")-> method begin  @31424|int(52,3)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.size")-> object size  @33632|channel(119,3)
				 method: ("begin")-> method begin  @31424|int(52,3)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.seek")-> object seek  @33952|channel(121,3)
				 method: ("begin")-> method begin  @31424|int(52,3)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.id")-> object id  @34592|channel(120,3)
				 method: ("begin")-> method begin  @31424|int(52,3)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.deficit")-> object deficit  @34272|channel(122,3)
				 method: ("begin")-> method begin  @31424|int(52,3)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.report")-> object report  @35552|channel(123,3)
				 method: ("begin")-> method begin  @18496|$appendix(,)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.pnote")-> object pnote  @34912|channel(124,3)
				 method: ("begin")-> method begin  @46672|addr(34,3)
			}
		}

		method begin  @09104|channel(42,3) --external
		 viable = yes
		{

			given
			{
				object action  @06560|channel(42,3) --internal
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)

				object id  @25104|channel(42,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @00480|channel(42,3) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object offset  @04320|channel(42,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @04000|channel(42,3) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object seek  @30544|channel(42,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @02720|channel(42,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				MAKE
				 literal: (direct)-> literal (anon)  @27024|channel(,) --'r'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @25424|channel(44,12)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @25424|channel(44,12)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @27024|channel(,)
				MAKE
				 object: (direct)-> object (anon)  @27344|channel(44,12)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("action")-> object action  @06560|channel(42,3)
				 method: ("is_equal?")-> method is_equal?  @30752|ascii(124,3)
				 input: (direct)-> object (anon)  @25424|channel(44,12)
				 output: (direct)-> object (anon)  @27344|channel(44,12)
				MAKE
				 object: (direct)-> object (anon)  @29584|channel(44,12)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @27344|channel(44,12)
				 method: ("not")-> method not  @39376|bool(43,3)
				 output: (direct)-> object (anon)  @29584|channel(44,12)
				MAKE
				 literal: (direct)-> literal (anon)  @30224|channel(,) --'w'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @28944|channel(44,40)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @28944|channel(44,40)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @30224|channel(,)
				MAKE
				 object: (direct)-> object (anon)  @25744|channel(44,40)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("action")-> object action  @06560|channel(42,3)
				 method: ("is_equal?")-> method is_equal?  @30752|ascii(124,3)
				 input: (direct)-> object (anon)  @28944|channel(44,40)
				 output: (direct)-> object (anon)  @25744|channel(44,40)
				MAKE
				 object: (direct)-> object (anon)  @26064|channel(44,40)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @25744|channel(44,40)
				 method: ("not")-> method not  @39376|bool(43,3)
				 output: (direct)-> object (anon)  @26064|channel(44,40)
				MAKE
				 object: (direct)-> object (anon)  @29264|channel(44,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @29584|channel(44,12)
				 method: ("and")-> method and  @38128|bool(34,3)
				 input: (direct)-> object (anon)  @26064|channel(44,40)
				 output: (direct)-> object (anon)  @29264|channel(44,10)
				IF
				 condition: (direct)-> object (anon)  @29264|channel(44,10)
				{
					true branch: RETURN --to isolate (quit)
					 trace: (direct)-> object (anon)  @26384|channel(,)
						trace branch: BLOCK --domain
						{
							MAKE
							 object: (direct)-> object (anon)  @26384|channel(,)
							 type: (direct)-> type $6<26>( alpha\op<fault> )  @40208|$appendix(,)
							MAKE
							 proxy: (direct)-> proxy (anon)  @58112|channel(,)
							 type: ("fault")-> type fault  @24224|fault(49,6)
							 permission: [init]
							CALL --initial, fundamental
							 lead: (direct)-> object (anon)  @26384|channel(,)
							 method: ("begin")-> method begin  @31120|$appendix(,)
							 result: (direct)-> proxy (anon)  @58112|channel(,)
							MAKE
							 literal: (direct)-> literal (anon)  @24784|channel(,) --'bug'
							 type: ("expr")-> type expr  @18368|expr(5,6)
							MAKE
							 literal: (direct)-> literal (anon)  @32144|channel(,) --'invalid i/o action'
							 type: ("expr")-> type expr  @18368|expr(5,6)
							MAKE
							 object: (direct)-> object (anon)  @62560|channel(44,78)
							 type: ("fault_category")-> enum type fault_category  @01568|fault(5,11)
							CALL --initial
							 lead: (direct)-> object (anon)  @62560|channel(44,78)
							 method: ("begin")-> method begin  @34464|fault(5,11)
							 input: (direct)-> literal (anon)  @24784|channel(,)
							CALL --initial, fundamental
							 lead: (direct)-> proxy (anon)  @58112|channel(,)
							 method: ("begin")-> method begin  @01984|fault(97,3)
							 input: (direct)-> object (anon)  @62560|channel(44,78)
							 input: (direct)-> literal (anon)  @32144|channel(,)
						}
				}
				CALL
				 subroutine: ("ascii_to_word")-> subroutine ascii_to_word  @44160|channel(107,3)
				 input: ("action")-> object action  @06560|channel(42,3)
				 output: ("io.action")-> object action  @32992|channel(116,3)
				CALL --initial, fundamental
				 lead: ("io.pdata")-> object pdata  @35872|channel(117,3)
				 method: ("begin")-> method begin  @45840|addr(36,3)
				 input: ("pdata")-> object pdata  @04000|channel(42,3)
				CALL --initial, fundamental
				 lead: ("io.offset")-> object offset  @33312|channel(118,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("offset")-> object offset  @04320|channel(42,3)
				CALL --initial, fundamental
				 lead: ("io.size")-> object size  @33632|channel(119,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("size")-> object size  @02720|channel(42,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @62976|channel(49,19)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL
				 subroutine: (direct)-> subroutine $22<5>( fix<int> )  @58288|$appendix(,)
				 input: ("seek")-> object seek  @30544|channel(42,3)
				 input: ("zero")-> object zero  @41840|conventional(34,2)
				 result: (direct)-> proxy (anon)  @62976|channel(49,19)
				CALL --initial, fundamental
				 lead: ("io.seek")-> object seek  @33952|channel(121,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: (direct)-> proxy (anon)  @62976|channel(49,19)
				MAKE
				 proxy: (direct)-> proxy (anon)  @62368|channel(50,17)
				 type: ("int")-> type int  @21536|int(6,6)
				 permission: [eval]
				CALL
				 subroutine: (direct)-> subroutine $22<5>( fix<int> )  @58288|$appendix(,)
				 input: ("id")-> object id  @25104|channel(42,3)
				 input: ("zero")-> object zero  @41840|conventional(34,2)
				 result: (direct)-> proxy (anon)  @62368|channel(50,17)
				CALL --initial, fundamental
				 lead: ("io.id")-> object id  @34592|channel(120,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: (direct)-> proxy (anon)  @62368|channel(50,17)
				CALL --initial, fundamental
				 lead: ("io.deficit")-> object deficit  @34272|channel(122,3)
				 method: ("begin")-> method begin  @31424|int(52,3)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.report")-> object report  @35552|channel(123,3)
				 method: ("begin")-> method begin  @18496|$appendix(,)
				 input: (pending)->
				CALL --initial, fundamental
				 lead: ("io.pnote")-> object pnote  @34912|channel(124,3)
				 method: ("begin")-> method begin  @46672|addr(34,3)
			}
		}

		method begin  @16176|channel(56,3) --external
		 viable = yes
		{

			given
			{
				object fex  @30864|channel(56,3) --internal
				 type: ("expr")-> type expr  @18368|expr(5,6)

				object io  @32464|channel(56,3) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object mediator  @26704|channel(56,3) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)
			}

			BLOCK --domain
			{
				MAKE
				 literal: (direct)-> literal (anon)  @27664|channel(,) --'b'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @27984|channel(,)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: (direct)-> object fex  @30864|channel(56,3)
				 method: ("is_equal?")-> method is_equal?  @06144|expr(94,3)
				 input: (direct)-> literal (anon)  @27664|channel(,)
				 input: (pending)->
				 output: (direct)-> object (anon)  @27984|channel(,)
				IF
				 condition: (direct)-> object fex  @30864|channel(56,3)
				{
					true branch: CALL
					 lead: (direct)-> object io  @32464|channel(56,3)
					 method: ("fread_format")-> method fread_format  @09344|channel(128,9)
					 input: (direct)-> object mediator  @26704|channel(56,3)
					false branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @28304|channel(,) --'format'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						MAKE
						 literal: (direct)-> literal (anon)  @28624|channel(,) --'unknown format'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						RETURN --to isolate (quit)
						 trace: (direct)-> object (anon)  @29904|channel(,)
							trace branch: BLOCK --domain
							{
								MAKE
								 object: (direct)-> object (anon)  @29904|channel(,)
								 type: (direct)-> type $6<26>( alpha\op<fault> )  @40208|$appendix(,)
								MAKE
								 proxy: (direct)-> proxy (anon)  @57504|channel(,)
								 type: ("fault")-> type fault  @24224|fault(49,6)
								 permission: [init]
								CALL --initial, fundamental
								 lead: (direct)-> object (anon)  @29904|channel(,)
								 method: ("begin")-> method begin  @31120|$appendix(,)
								 result: (direct)-> proxy (anon)  @57504|channel(,)
								MAKE
								 object: (direct)-> object (anon)  @62240|channel(,)
								 type: ("fault_category")-> enum type fault_category  @01568|fault(5,11)
								CALL --initial
								 lead: (direct)-> object (anon)  @62240|channel(,)
								 method: ("begin")-> method begin  @34464|fault(5,11)
								 input: (direct)-> literal (anon)  @28304|channel(,)
								CALL --initial, fundamental
								 lead: (direct)-> proxy (anon)  @57504|channel(,)
								 method: ("begin")-> method begin  @01984|fault(97,3)
								 input: (direct)-> object (anon)  @62240|channel(,)
								 input: (direct)-> literal (anon)  @28624|channel(,)
							}
					}
				}
			}
		}

		format format  @60416|channel(128,9) --internal
		{
			(direct)-> object action  @32992|channel(116,3)
			(direct)-> object pdata  @35872|channel(117,3)
			(direct)-> object offset  @33312|channel(118,3)
			(direct)-> object size  @33632|channel(119,3)
			(direct)-> object id  @34592|channel(120,3)
			(direct)-> object seek  @33952|channel(121,3)
			(direct)-> object deficit  @34272|channel(122,3)
			(direct)-> object report  @35552|channel(123,3)
			(direct)-> object pnote  @34912|channel(124,3)
		}

		method fread_format  @09344|channel(128,9) --internal
		 viable = yes
		{

			given
			{
				object io  @34256|channel(128,9) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object mediator  @36496|channel(128,9) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)
			}

			BLOCK --domain
			{
				CALL --fundamental
				 lead: (direct)-> object mediator  @36496|channel(128,9)
				 method: ("enable_auto_align")-> method enable_auto_align  @62560|mediator(324,3)
				MAKE
				 literal: (direct)-> literal (anon)  @35856|channel(,) --'b'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object action  @32992|channel(116,3)
				 method: ("begin")-> method begin  @20160|$appendix(,)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object pdata  @35872|channel(117,3)
				 method: ("begin")-> method begin  @46256|addr(38,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object offset  @33312|channel(118,3)
				 method: ("begin")-> method begin  @33088|int(59,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object size  @33632|channel(119,3)
				 method: ("begin")-> method begin  @33088|int(59,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object id  @34592|channel(120,3)
				 method: ("begin")-> method begin  @33088|int(59,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object seek  @33952|channel(121,3)
				 method: ("begin")-> method begin  @33088|int(59,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object deficit  @34272|channel(122,3)
				 method: ("begin")-> method begin  @33088|int(59,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object report  @35552|channel(123,3)
				 method: ("begin")-> method begin  @20160|$appendix(,)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
				CALL --initial, fundamental
				 lead: (direct)-> object pnote  @34912|channel(124,3)
				 method: ("begin")-> method begin  @46256|addr(38,3)
				 input: (direct)-> object mediator  @36496|channel(128,9)
				 input: (direct)-> literal (anon)  @35856|channel(,)
			}
		}

		method fwrite_format  @08512|channel(128,9) --internal
		 viable = yes
		{

			given
			{
				object io  @34896|channel(128,9) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object mediator  @36816|channel(128,9) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)
			}

			BLOCK --domain
			{
				CALL --fundamental
				 lead: (direct)-> object mediator  @36816|channel(128,9)
				 method: ("enable_auto_align")-> method enable_auto_align  @62560|mediator(324,3)
				MAKE
				 literal: (direct)-> literal (anon)  @40016|channel(,) --'b'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				CALL --fundamental
				 lead: (direct)-> object action  @32992|channel(116,3)
				 method: ("store")-> method store  @08880|$appendix(,)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object pdata  @35872|channel(117,3)
				 method: ("store")-> method store  @47088|addr(40,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object offset  @33312|channel(118,3)
				 method: ("store")-> method store  @33504|int(61,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object size  @33632|channel(119,3)
				 method: ("store")-> method store  @33504|int(61,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object id  @34592|channel(120,3)
				 method: ("store")-> method store  @33504|int(61,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object seek  @33952|channel(121,3)
				 method: ("store")-> method store  @33504|int(61,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object deficit  @34272|channel(122,3)
				 method: ("store")-> method store  @33504|int(61,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object report  @35552|channel(123,3)
				 method: ("store")-> method store  @08880|$appendix(,)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
				CALL --fundamental
				 lead: (direct)-> object pnote  @34912|channel(124,3)
				 method: ("store")-> method store  @47088|addr(40,3)
				 input: (direct)-> object mediator  @36816|channel(128,9)
				 input: (direct)-> literal (anon)  @40016|channel(,)
			}
		}

		method get_group1  @11184|channel(66,3) --external
		 viable = yes
		{

			given
			{
				object action  @62960|channel(66,3) --internal
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)

				object id  @62640|channel(66,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @64240|channel(66,3) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object offset  @61360|channel(66,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @63280|channel(66,3) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object seek  @64560|channel(66,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @58160|channel(66,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)
			}

			BLOCK --domain
			{
				CALL
				 subroutine: ("word_to_ascii")-> subroutine word_to_ascii  @39760|channel(102,3)
				 input: ("io.action")-> object action  @32992|channel(116,3)
				 output: ("action")-> object action  @62960|channel(66,3)
				CALL --initial, fundamental
				 lead: ("pdata")-> object pdata  @63280|channel(66,3)
				 method: ("begin")-> method begin  @45840|addr(36,3)
				 input: ("io.pdata")-> object pdata  @35872|channel(117,3)
				CALL --initial, fundamental
				 lead: ("offset")-> object offset  @61360|channel(66,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("io.offset")-> object offset  @33312|channel(118,3)
				CALL --initial, fundamental
				 lead: ("size")-> object size  @58160|channel(66,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("io.size")-> object size  @33632|channel(119,3)
				CALL --initial, fundamental
				 lead: ("seek")-> object seek  @64560|channel(66,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("io.seek")-> object seek  @33952|channel(121,3)
				CALL --initial, fundamental
				 lead: ("id")-> object id  @62640|channel(66,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("io.id")-> object id  @34592|channel(120,3)
			}
		}

		method get_group2  @12848|channel(77,3) --external
		 viable = yes
		{

			common
			{
				enumerator $index  @60528|channel(,) --internal
				 type: (direct)-> type $1<4>( <ascii>enumerator )  @40592|$appendix(,)

				subroutine $start1  @35616|channel(,) --internal
				 viable = yes
				{

					given
					{
					}

					BLOCK --domain
					{
						MAKE
						 enumerator: (direct)-> enumerator $index  @60528|channel(,)
						 type: (direct)-> type $1<4>( <ascii>enumerator )  @40592|$appendix(,)
					}
				}
			}


			given
			{
				object cr  @61040|channel(77,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object deficit  @59120|channel(77,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @61680|channel(77,3) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object note  @62000|channel(77,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)
			}

			BLOCK --domain
			{
				CALL --initial, fundamental
				 lead: ("deficit")-> object deficit  @59120|channel(77,3)
				 method: ("begin")-> method begin  @31840|int(54,3)
				 input: ("io.deficit")-> object deficit  @34272|channel(122,3)
				MAKE
				 object: (direct)-> object (anon)  @57840|channel(80,42)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL
				 subroutine: ("word_to_ascii")-> subroutine word_to_ascii  @39760|channel(102,3)
				 input: ("io.report")-> object report  @35552|channel(123,3)
				 output: (direct)-> object (anon)  @57840|channel(80,42)
				SELECT
				 selector: (direct)-> object (anon)  @57840|channel(80,42)
				 enumerator: (direct)-> enumerator $index  @60528|channel(,)
				 'NUL' -> branch 0
				 'p' -> branch 1
				 'b' -> branch 2
				 'c' -> branch 3
				 'r' -> branch 4
				 'e' -> branch 5
				 'x' -> branch 6
				{

					branch 0: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @63920|channel(,) --'good'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @63920|channel(,)
					}

					branch 1: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @64880|channel(,) --'pending'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @64880|channel(,)
					}

					branch 2: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @59760|channel(,) --'busy'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @59760|channel(,)
					}

					branch 3: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @60080|channel(,) --'closed'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @60080|channel(,)
					}

					branch 4: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @65200|channel(,) --'retry'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @65200|channel(,)
					}

					branch 5: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @59440|channel(,) --'end'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @59440|channel(,)
					}

					branch 6: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @57520|channel(,) --'error'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @57520|channel(,)
					}

					default branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @62320|channel(,) --'other'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("cr")-> object cr  @61040|channel(77,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @62320|channel(,)
					}
				}
				MAKE
				 object: (direct)-> object (anon)  @33616|channel(91,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("io.pnote")-> object pnote  @34912|channel(124,3)
				 method: ("is_equal?")-> method is_equal?  @48336|addr(42,3)
				 input: ("no_addr")-> object no_addr  @44080|conventional(14,2)
				 output: (direct)-> object (anon)  @33616|channel(91,10)
				MAKE
				 object: (direct)-> object (anon)  @40336|channel(91,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @33616|channel(91,10)
				 method: ("not")-> method not  @39376|bool(43,3)
				 output: (direct)-> object (anon)  @40336|channel(91,10)
				IF
				 condition: (direct)-> object (anon)  @40336|channel(91,10)
				{
					true branch: BLOCK --domain
					{
						CALL
						 subroutine: ("cstr_to_alpha")-> subroutine cstr_to_alpha  @42160|conventional(165,2)
						 input: ("io.pnote")-> object pnote  @34912|channel(124,3)
						 output: ("note")-> object note  @62000|channel(77,3)
						CALL --terminal, fundamental
						 lead: ("io.pnote")-> object pnote  @34912|channel(124,3)
						 method: ("recycle")-> method recycle  @42736|object(38,3)
						CALL --initial, fundamental
						 lead: ("io.pnote")-> object pnote  @34912|channel(124,3)
						 method: ("begin")-> method begin  @45840|addr(36,3)
						 input: ("no_addr")-> object no_addr  @44080|conventional(14,2)
					}
				}
			}
		}

		method store  @03280|channel(61,3) --external
		 viable = yes
		{

			given
			{
				object fex  @31824|channel(61,3) --internal
				 type: ("expr")-> type expr  @18368|expr(5,6)

				object io  @31184|channel(61,3) --internal
				 type: (direct)-> type request  @08864|channel(16,13)

				object mediator  @31504|channel(61,3) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)
			}

			BLOCK --domain
			{
				MAKE
				 literal: (direct)-> literal (anon)  @58480|channel(,) --'b'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @60400|channel(,)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: (direct)-> object fex  @31824|channel(61,3)
				 method: ("is_equal?")-> method is_equal?  @06144|expr(94,3)
				 input: (direct)-> literal (anon)  @58480|channel(,)
				 input: (pending)->
				 output: (direct)-> object (anon)  @60400|channel(,)
				IF
				 condition: (direct)-> object fex  @31824|channel(61,3)
				{
					true branch: CALL
					 lead: (direct)-> object io  @31184|channel(61,3)
					 method: ("fwrite_format")-> method fwrite_format  @08512|channel(128,9)
					 input: (direct)-> object mediator  @31504|channel(61,3)
					false branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @58800|channel(,) --'format'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						MAKE
						 literal: (direct)-> literal (anon)  @60720|channel(,) --'unknown format'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						RETURN --to isolate (quit)
						 trace: (direct)-> object (anon)  @63600|channel(,)
							trace branch: BLOCK --domain
							{
								MAKE
								 object: (direct)-> object (anon)  @63600|channel(,)
								 type: (direct)-> type $6<26>( alpha\op<fault> )  @40208|$appendix(,)
								MAKE
								 proxy: (direct)-> proxy (anon)  @63280|channel(,)
								 type: ("fault")-> type fault  @24224|fault(49,6)
								 permission: [init]
								CALL --initial, fundamental
								 lead: (direct)-> object (anon)  @63600|channel(,)
								 method: ("begin")-> method begin  @31120|$appendix(,)
								 result: (direct)-> proxy (anon)  @63280|channel(,)
								MAKE
								 object: (direct)-> object (anon)  @64160|channel(,)
								 type: ("fault_category")-> enum type fault_category  @01568|fault(5,11)
								CALL --initial
								 lead: (direct)-> object (anon)  @64160|channel(,)
								 method: ("begin")-> method begin  @34464|fault(5,11)
								 input: (direct)-> literal (anon)  @58800|channel(,)
								CALL --initial, fundamental
								 lead: (direct)-> proxy (anon)  @63280|channel(,)
								 method: ("begin")-> method begin  @01984|fault(97,3)
								 input: (direct)-> object (anon)  @64160|channel(,)
								 input: (direct)-> literal (anon)  @60720|channel(,)
							}
					}
				}
			}
		}

		subroutine word_to_ascii  @39760|channel(102,3) --internal
		 viable = yes
		{

			given
			{
				object a  @38096|channel(102,3) --internal
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)

				object w  @39056|channel(102,3) --internal
				 type: (direct)-> type $3<'8'>( word<'8'> )  @37136|$appendix(,)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @39696|channel(104,13)
				 type: ("int")-> type int  @21536|int(6,6)
				MAKE
				 literal: (direct)-> literal (anon)  @40656|channel(,) --'b:ascii'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @39696|channel(104,13)
				 method: (direct)-> method $27<'8'>( begin<'8'> )  @22384|$appendix(,)
				 input: ("w")-> object w  @39056|channel(102,3)
				 input: (direct)-> literal (anon)  @40656|channel(,)
				CALL --initial, fundamental
				 lead: ("a")-> object a  @38096|channel(102,3)
				 method: ("begin")-> method begin  @35328|ascii(110,3)
				 input: (direct)-> object (anon)  @39696|channel(104,13)
			}
		}

		instance
		{
			object action  @32992|channel(116,3) --internal
			 type: (direct)-> type $3<'8'>( word<'8'> )  @37136|$appendix(,)

			object deficit  @34272|channel(122,3) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object id  @34592|channel(120,3) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object offset  @33312|channel(118,3) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object pdata  @35872|channel(117,3) --internal
			 type: ("addr")-> type addr  @44496|addr(4,6)

			object pnote  @34912|channel(124,3) --internal
			 type: ("addr")-> type addr  @44496|addr(4,6)

			object report  @35552|channel(123,3) --internal
			 type: (direct)-> type $3<'8'>( word<'8'> )  @37136|$appendix(,)

			object seek  @33952|channel(121,3) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object size  @33632|channel(119,3) --internal
			 type: ("int")-> type int  @21536|int(6,6)
		}

	}

	subroutine restore_request  @43760|channel(142,2) --internal
	 viable = yes
	{

		given
		{
			object pr  @33936|channel(142,2) --internal
			 type: ("addr")-> type addr  @44496|addr(4,6)

			object r  @35216|channel(142,2) --internal
			 type: ("request")-> type request  @08864|channel(16,13)
		}

		BLOCK --domain
		{
			MAKE
			 object: (direct)-> object m  @35536|channel(144,3)
			 type: ("mediator")-> type mediator  @22304|mediator(21,6)
			CALL --initial, fundamental
			 lead: (direct)-> object m  @35536|channel(144,3)
			 method: ("begin")-> method begin  @60480|mediator(307,3)
			 input: (pending)->
			 input: (pending)->
			CALL --fundamental
			 lead: (direct)-> object m  @35536|channel(144,3)
			 method: ("attach")-> method attach  @13248|mediator(321,3)
			 input: ("pr")-> object pr  @33936|channel(142,2)
			 input: ("sizeof_request")-> object sizeof_request  @32672|channel(7,2)
			MAKE
			 literal: (direct)-> literal (anon)  @37456|channel(,) --'b'
			 type: ("expr")-> type expr  @18368|expr(5,6)
			CALL --initial
			 lead: ("r")-> object r  @35216|channel(142,2)
			 method: ("begin")-> method begin  @16176|channel(56,3)
			 input: ("m")-> object m  @35536|channel(144,3)
			 input: (direct)-> literal (anon)  @37456|channel(,)
		}
	}

	type sync_channel_reader  @09632|channel(372,6) --external
	 viable = yes
	{
		method begin  @05776|channel(402,3) --external
		 viable = yes
		{

			given
			{
				object io  @47184|channel(402,3) --internal
				 type: (direct)-> type sync_channel_reader  @09632|channel(372,6)

				object wait  @45264|channel(402,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @50384|channel(404,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("wait")-> object wait  @45264|channel(402,3)
				 method: ("is_not_null?")-> method is_not_null?  @42320|object(36,3)
				 output: (direct)-> object (anon)  @50384|channel(404,10)
				IF
				 condition: (direct)-> object (anon)  @50384|channel(404,10)
				{
					true branch: CALL --initial, fundamental
					 lead: ("io.wait")-> object wait  @42480|channel(428,3)
					 method: ("begin")-> method begin  @35120|etm(73,3)
					 input: ("wait")-> object wait  @45264|channel(402,3)
				}
			}
		}

		method read  @16592|channel(407,3) --external
		 viable = yes
		{

			given
			{
				object io  @48784|channel(407,3) --internal
				 type: (direct)-> type sync_channel_reader  @09632|channel(372,6)

				object med  @45584|channel(407,3) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)

				object note  @57488|channel(407,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object report  @50704|channel(407,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @47824|channel(407,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @49104|channel(407,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object offset  @59408|channel(409,18)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @45584|channel(407,3)
				 method: ("get_wp")-> method get_wp  @24064|mediator(359,3)
				 output: (direct)-> object offset  @59408|channel(409,18)
				MAKE
				 object: (direct)-> object rsize  @03152|channel(409,44)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @45584|channel(407,3)
				 method: ("get_size")-> method get_size  @14912|mediator(333,3)
				 output: (direct)-> object rsize  @03152|channel(409,44)
				CALL --fundamental
				 lead: (direct)-> object rsize  @03152|channel(409,44)
				 method: ("sub")-> method sub  @46576|int(79,3)
				 input: ("offset")-> object offset  @59408|channel(409,18)
				MAKE
				 object: (direct)-> object (anon)  @63888|channel(410,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("zero")-> object zero  @41840|conventional(34,2)
				 method: ("is_less?")-> method is_less?  @35168|int(68,3)
				 input: ("rsize")-> object rsize  @03152|channel(409,44)
				 output: (direct)-> object (anon)  @63888|channel(410,10)
				IF
				 condition: (direct)-> object (anon)  @63888|channel(410,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object pdata  @60688|channel(412,19)
						 type: ("addr")-> type addr  @44496|addr(4,6)
						MAKE
						 object: (direct)-> object (anon)  @59088|channel(412,8)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --fundamental
						 lead: ("med")-> object med  @45584|channel(407,3)
						 method: ("detach")-> method detach  @62144|mediator(319,3)
						 output: (direct)-> object pdata  @60688|channel(412,19)
						 output: (direct)-> object (anon)  @59088|channel(412,8)
						MAKE
						 proxy: (direct)-> proxy (anon)  @64496|channel(413,15)
						 type: ("etm")-> type etm  @17984|etm(5,6)
						 permission: [eval]
						CALL
						 subroutine: (direct)-> subroutine $22<24>( fix<etm> )  @61888|$appendix(,)
						 input: ("wait")-> object wait  @49104|channel(407,3)
						 input: ("io.wait")-> object wait  @42480|channel(428,3)
						 result: (direct)-> proxy (anon)  @64496|channel(413,15)
						MAKE
						 object: (direct)-> object deficit  @01552|channel(413,67)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --virtual
						 lead: ("io")-> object io  @48784|channel(407,3)
						 method: ("~read")-> abstract method ~read  @49216|channel(423,3)
						 input: (direct)-> proxy (anon)  @64496|channel(413,15)
						 input: ("seek")-> object seek  @47824|channel(407,3)
						 input: ("pdata")-> object pdata  @60688|channel(412,19)
						 input: ("offset")-> object offset  @59408|channel(409,18)
						 input: ("rsize")-> object rsize  @03152|channel(409,44)
						 output: (direct)-> object deficit  @01552|channel(413,67)
						 output: ("report")-> object report  @50704|channel(407,3)
						 output: ("note")-> object note  @57488|channel(407,3)
						MAKE
						 literal: (direct)-> literal (anon)  @64848|channel(,) --'r'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						MAKE
						 object: (direct)-> object (anon)  @65488|channel(414,5)
						 type: ("ascii")-> type ascii  @19552|ascii(5,6)
						CALL --initial, fundamental
						 lead: (direct)-> object (anon)  @65488|channel(414,5)
						 method: ("begin")-> method begin  @25872|ascii(108,3)
						 input: (direct)-> literal (anon)  @64848|channel(,)
						CALL
						 subroutine: ("update_mediator")-> subroutine update_mediator  @39360|channel(148,2)
						 input: ("med")-> object med  @45584|channel(407,3)
						 input: ("pdata")-> object pdata  @60688|channel(412,19)
						 input: ("offset")-> object offset  @59408|channel(409,18)
						 input: ("rsize")-> object rsize  @03152|channel(409,44)
						 input: ("deficit")-> object deficit  @01552|channel(413,67)
						 input: (direct)-> object (anon)  @65488|channel(414,5)
					}
					false branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @02192|channel(,) --'good'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("report")-> object report  @50704|channel(407,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @02192|channel(,)
					}
				}
			}
		}

		abstract method ~read  @49216|channel(423,3) --fraternal
		 key = sync_channel_reader-0
		 viable = yes

		instance
		{
			object wait  @42480|channel(428,3) --internal
			 type: ("etm")-> type etm  @17984|etm(5,6)
		}

	}

	type sync_channel_writer  @10016|channel(433,6) --external
	 viable = yes
	{
		method begin  @17008|channel(463,3) --external
		 viable = yes
		{

			given
			{
				object io  @00912|channel(463,3) --internal
				 type: (direct)-> type sync_channel_writer  @10016|channel(433,6)

				object wait  @64208|channel(463,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @04432|channel(465,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("wait")-> object wait  @64208|channel(463,3)
				 method: ("is_not_null?")-> method is_not_null?  @42320|object(36,3)
				 output: (direct)-> object (anon)  @04432|channel(465,10)
				IF
				 condition: (direct)-> object (anon)  @04432|channel(465,10)
				{
					true branch: CALL --initial, fundamental
					 lead: ("io.wait")-> object wait  @40240|channel(491,3)
					 method: ("begin")-> method begin  @35120|etm(73,3)
					 input: ("wait")-> object wait  @64208|channel(463,3)
				}
			}
		}

		method write  @17424|channel(468,3) --external
		 viable = yes
		{

			given
			{
				object io  @60048|channel(468,3) --internal
				 type: (direct)-> type sync_channel_writer  @10016|channel(433,6)

				object med  @03472|channel(468,3) --internal
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)

				object note  @61328|channel(468,3) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object report  @00272|channel(468,3) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @63568|channel(468,3) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @01872|channel(468,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object offset  @62288|channel(470,18)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @03472|channel(468,3)
				 method: ("get_rp")-> method get_rp  @16992|mediator(344,3)
				 output: (direct)-> object offset  @62288|channel(470,18)
				MAKE
				 object: (direct)-> object rsize  @06352|channel(470,44)
				 type: ("int")-> type int  @21536|int(6,6)
				CALL --fundamental
				 lead: ("med")-> object med  @03472|channel(468,3)
				 method: ("get_size")-> method get_size  @14912|mediator(333,3)
				 output: (direct)-> object rsize  @06352|channel(470,44)
				CALL --fundamental
				 lead: (direct)-> object rsize  @06352|channel(470,44)
				 method: ("sub")-> method sub  @46576|int(79,3)
				 input: ("offset")-> object offset  @62288|channel(470,18)
				MAKE
				 object: (direct)-> object (anon)  @64528|channel(471,10)
				 type: ("bool")-> type bool  @19936|bool(5,6)
				CALL --fundamental
				 lead: ("zero")-> object zero  @41840|conventional(34,2)
				 method: ("is_less?")-> method is_less?  @35168|int(68,3)
				 input: ("rsize")-> object rsize  @06352|channel(470,44)
				 output: (direct)-> object (anon)  @64528|channel(471,10)
				IF
				 condition: (direct)-> object (anon)  @64528|channel(471,10)
				{
					true branch: BLOCK --domain
					{
						MAKE
						 object: (direct)-> object pdata  @63248|channel(473,19)
						 type: ("addr")-> type addr  @44496|addr(4,6)
						MAKE
						 object: (direct)-> object (anon)  @57808|channel(473,8)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --fundamental
						 lead: ("med")-> object med  @03472|channel(468,3)
						 method: ("detach")-> method detach  @62144|mediator(319,3)
						 output: (direct)-> object pdata  @63248|channel(473,19)
						 output: (direct)-> object (anon)  @57808|channel(473,8)
						MAKE
						 proxy: (direct)-> proxy (anon)  @60240|channel(474,16)
						 type: ("etm")-> type etm  @17984|etm(5,6)
						 permission: [eval]
						CALL
						 subroutine: (direct)-> subroutine $22<24>( fix<etm> )  @61888|$appendix(,)
						 input: ("wait")-> object wait  @01872|channel(468,3)
						 input: ("io.wait")-> object wait  @40240|channel(491,3)
						 result: (direct)-> proxy (anon)  @60240|channel(474,16)
						MAKE
						 object: (direct)-> object deficit  @65168|channel(474,68)
						 type: ("int")-> type int  @21536|int(6,6)
						CALL --virtual
						 lead: ("io")-> object io  @60048|channel(468,3)
						 method: ("~write")-> abstract method ~write  @55664|channel(485,3)
						 input: (direct)-> proxy (anon)  @60240|channel(474,16)
						 input: ("seek")-> object seek  @63568|channel(468,3)
						 input: ("pdata")-> object pdata  @63248|channel(473,19)
						 input: ("offset")-> object offset  @62288|channel(470,18)
						 input: ("rsize")-> object rsize  @06352|channel(470,44)
						 output: (direct)-> object deficit  @65168|channel(474,68)
						 output: ("report")-> object report  @00272|channel(468,3)
						 output: ("note")-> object note  @61328|channel(468,3)
						MAKE
						 literal: (direct)-> literal (anon)  @61648|channel(,) --'w'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						MAKE
						 object: (direct)-> object (anon)  @06672|channel(475,5)
						 type: ("ascii")-> type ascii  @19552|ascii(5,6)
						CALL --initial, fundamental
						 lead: (direct)-> object (anon)  @06672|channel(475,5)
						 method: ("begin")-> method begin  @25872|ascii(108,3)
						 input: (direct)-> literal (anon)  @61648|channel(,)
						CALL
						 subroutine: ("update_mediator")-> subroutine update_mediator  @39360|channel(148,2)
						 input: ("med")-> object med  @03472|channel(468,3)
						 input: ("pdata")-> object pdata  @63248|channel(473,19)
						 input: ("offset")-> object offset  @62288|channel(470,18)
						 input: ("rsize")-> object rsize  @06352|channel(470,44)
						 input: ("deficit")-> object deficit  @65168|channel(474,68)
						 input: (direct)-> object (anon)  @06672|channel(475,5)
					}
					false branch: BLOCK --domain
					{
						MAKE
						 literal: (direct)-> literal (anon)  @03792|channel(,) --'good'
						 type: ("expr")-> type expr  @18368|expr(5,6)
						CALL --initial
						 lead: ("report")-> object report  @00272|channel(468,3)
						 method: ("begin")-> method begin  @13920|channel(160,11)
						 input: (direct)-> literal (anon)  @03792|channel(,)
					}
				}
			}
		}

		abstract method ~write  @55664|channel(485,3) --fraternal
		 key = sync_channel_writer-0
		 viable = yes

		instance
		{
			object wait  @40240|channel(491,3) --internal
			 type: ("etm")-> type etm  @17984|etm(5,6)
		}

	}

	type sync_read_only_channel  @33760|channel(560,6) --external
	 from ("channel")-> type channel  @09248|channel(193,6)
	 from ("sync_channel_reader")-> type sync_channel_reader  @09632|channel(372,6)
	 viable = yes
	{
		method begin  @19088|channel(564,3) --external
		 viable = yes
		{

			given
			{
				object hch  @18768|channel(564,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @27088|channel(564,3) --internal
				 type: (direct)-> type sync_read_only_channel  @33760|channel(560,6)

				object wait  @18448|channel(564,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @63584|channel(566,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @27088|channel(564,3)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @63584|channel(566,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @63584|channel(566,6)
				 method: ("begin")-> method begin  @02032|channel(261,3)
				 input: ("hch")-> object hch  @18768|channel(564,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @59936|channel(567,6)
				 type: ("sync_channel_reader")-> type sync_channel_reader  @09632|channel(372,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @27088|channel(564,3)
				 method: (direct)-> method $18<28>( as_base<sync_channel_reader> )  @16976|$appendix(,)
				 result: (direct)-> proxy (anon)  @59936|channel(567,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @59936|channel(567,6)
				 method: ("begin")-> method begin  @05776|channel(402,3)
				 input: ("wait")-> object wait  @18448|channel(564,3)
			}
		}

		method end  @57744|channel(,) --internal
		 viable = yes
		{

			given
			{
				object io  @51120|channel(,) --internal
				 type: (direct)-> type sync_read_only_channel  @33760|channel(560,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @08640|channel(,)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @51120|channel(,)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @08640|channel(,)
				CALL --terminal
				 lead: (direct)-> proxy (anon)  @08640|channel(,)
				 method: (direct)-> method end  @06608|channel(338,3)
			}
		}

		abstract method ~read  @53184|channel(573,11) --fraternal
		 key = sync_channel_reader-0
		 viable = yes
		{

			given
			{
				object deficit  @31888|channel(573,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @25488|channel(573,11) --internal
				 type: (direct)-> type sync_read_only_channel  @33760|channel(560,6)

				object note  @29008|channel(573,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @22288|channel(573,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @25808|channel(573,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @22928|channel(573,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @26448|channel(573,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @27408|channel(573,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @17488|channel(573,11) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @61456|channel(575,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @25488|channel(573,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @61456|channel(575,6)
				MAKE
				 literal: (direct)-> literal (anon)  @28368|channel(,) --'r'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @64800|channel(575,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @64800|channel(575,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @28368|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @61456|channel(575,6)
				 method: ("execute_sync")-> method execute_sync  @14512|channel(285,3)
				 input: ("wait")-> object wait  @17488|channel(573,11)
				 input: (direct)-> object (anon)  @64800|channel(575,23)
				 input: ("seek")-> object seek  @26448|channel(573,11)
				 input: ("pdata")-> object pdata  @25808|channel(573,11)
				 input: ("offset")-> object offset  @22288|channel(573,11)
				 input: ("size")-> object size  @27408|channel(573,11)
				 output: ("deficit")-> object deficit  @31888|channel(573,11)
				 output: ("report")-> object report  @22928|channel(573,11)
				 output: ("note")-> object note  @29008|channel(573,11)
			}
		}
	}

	type sync_read_write_channel  @36448|channel(603,6) --external
	 from ("channel")-> type channel  @09248|channel(193,6)
	 from ("sync_channel_reader")-> type sync_channel_reader  @09632|channel(372,6)
	 from ("sync_channel_writer")-> type sync_channel_writer  @10016|channel(433,6)
	 viable = yes
	{
		method begin  @21168|channel(607,3) --external
		 viable = yes
		{

			given
			{
				object hch  @62304|channel(607,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @61984|channel(607,3) --internal
				 type: (direct)-> type sync_read_write_channel  @36448|channel(603,6)

				object wait  @01888|channel(607,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @58416|channel(609,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @61984|channel(607,3)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @58416|channel(609,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @58416|channel(609,6)
				 method: ("begin")-> method begin  @02032|channel(261,3)
				 input: ("hch")-> object hch  @62304|channel(607,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @59024|channel(610,6)
				 type: ("sync_channel_reader")-> type sync_channel_reader  @09632|channel(372,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @61984|channel(607,3)
				 method: (direct)-> method $18<28>( as_base<sync_channel_reader> )  @16976|$appendix(,)
				 result: (direct)-> proxy (anon)  @59024|channel(610,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @59024|channel(610,6)
				 method: ("begin")-> method begin  @05776|channel(402,3)
				 input: ("wait")-> object wait  @01888|channel(607,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @58720|channel(611,6)
				 type: ("sync_channel_writer")-> type sync_channel_writer  @10016|channel(433,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @61984|channel(607,3)
				 method: (direct)-> method $18<29>( as_base<sync_channel_writer> )  @38192|$appendix(,)
				 result: (direct)-> proxy (anon)  @58720|channel(611,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @58720|channel(611,6)
				 method: ("begin")-> method begin  @17008|channel(463,3)
				 input: ("wait")-> object wait  @01888|channel(607,3)
			}
		}

		method end  @47760|channel(,) --internal
		 viable = yes
		{

			given
			{
				object io  @53040|channel(,) --internal
				 type: (direct)-> type sync_read_write_channel  @36448|channel(603,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @49632|channel(,)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @53040|channel(,)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @49632|channel(,)
				CALL --terminal
				 lead: (direct)-> proxy (anon)  @49632|channel(,)
				 method: (direct)-> method end  @06608|channel(338,3)
			}
		}

		abstract method ~read  @42272|channel(617,11) --fraternal
		 key = sync_channel_reader-0
		 viable = yes
		{

			given
			{
				object deficit  @60384|channel(617,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @57504|channel(617,11) --internal
				 type: (direct)-> type sync_read_write_channel  @36448|channel(603,6)

				object note  @01568|channel(617,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @60064|channel(617,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @64544|channel(617,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @02528|channel(617,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @02208|channel(617,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @65184|channel(617,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @04768|channel(617,11) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @62672|channel(619,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @57504|channel(617,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @62672|channel(619,6)
				MAKE
				 literal: (direct)-> literal (anon)  @61024|channel(,) --'r'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @61920|channel(619,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @61920|channel(619,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @61024|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @62672|channel(619,6)
				 method: ("execute_sync")-> method execute_sync  @14512|channel(285,3)
				 input: ("wait")-> object wait  @04768|channel(617,11)
				 input: (direct)-> object (anon)  @61920|channel(619,23)
				 input: ("seek")-> object seek  @02208|channel(617,11)
				 input: ("pdata")-> object pdata  @64544|channel(617,11)
				 input: ("offset")-> object offset  @60064|channel(617,11)
				 input: ("size")-> object size  @65184|channel(617,11)
				 output: ("deficit")-> object deficit  @60384|channel(617,11)
				 output: ("report")-> object report  @02528|channel(617,11)
				 output: ("note")-> object note  @01568|channel(617,11)
			}
		}

		abstract method ~write  @50704|channel(625,11) --fraternal
		 key = sync_channel_writer-0
		 viable = yes
		{

			given
			{
				object deficit  @03168|channel(625,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @02848|channel(625,11) --internal
				 type: (direct)-> type sync_read_write_channel  @36448|channel(603,6)

				object note  @61664|channel(625,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @07328|channel(625,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @62624|channel(625,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @03488|channel(625,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @58144|channel(625,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @06048|channel(625,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @59104|channel(625,11) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @59328|channel(627,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @02848|channel(625,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @59328|channel(627,6)
				MAKE
				 literal: (direct)-> literal (anon)  @03808|channel(,) --'w'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @62880|channel(627,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @62880|channel(627,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @03808|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @59328|channel(627,6)
				 method: ("execute_sync")-> method execute_sync  @14512|channel(285,3)
				 input: ("wait")-> object wait  @59104|channel(625,11)
				 input: (direct)-> object (anon)  @62880|channel(627,23)
				 input: ("seek")-> object seek  @58144|channel(625,11)
				 input: ("pdata")-> object pdata  @62624|channel(625,11)
				 input: ("offset")-> object offset  @07328|channel(625,11)
				 input: ("size")-> object size  @06048|channel(625,11)
				 output: ("deficit")-> object deficit  @03168|channel(625,11)
				 output: ("report")-> object report  @03488|channel(625,11)
				 output: ("note")-> object note  @61664|channel(625,11)
			}
		}
	}

	type sync_write_only_channel  @30688|channel(582,6) --external
	 from ("channel")-> type channel  @09248|channel(193,6)
	 from ("sync_channel_writer")-> type sync_channel_writer  @10016|channel(433,6)
	 viable = yes
	{
		method begin  @02864|channel(586,3) --external
		 viable = yes
		{

			given
			{
				object hch  @30288|channel(586,3) --internal
				 type: ("handle")-> type handle  @23456|handle(5,6)

				object io  @29328|channel(586,3) --internal
				 type: (direct)-> type sync_write_only_channel  @30688|channel(582,6)

				object wait  @19088|channel(586,3) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @09248|channel(588,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @29328|channel(586,3)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @09248|channel(588,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @09248|channel(588,6)
				 method: ("begin")-> method begin  @02032|channel(261,3)
				 input: ("hch")-> object hch  @30288|channel(586,3)
				MAKE
				 proxy: (direct)-> proxy (anon)  @09552|channel(589,6)
				 type: ("sync_channel_writer")-> type sync_channel_writer  @10016|channel(433,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @29328|channel(586,3)
				 method: (direct)-> method $18<29>( as_base<sync_channel_writer> )  @38192|$appendix(,)
				 result: (direct)-> proxy (anon)  @09552|channel(589,6)
				CALL --initial
				 lead: (direct)-> proxy (anon)  @09552|channel(589,6)
				 method: ("begin")-> method begin  @17008|channel(463,3)
				 input: ("wait")-> object wait  @19088|channel(586,3)
			}
		}

		method end  @58160|channel(,) --internal
		 viable = yes
		{

			given
			{
				object io  @46320|channel(,) --internal
				 type: (direct)-> type sync_write_only_channel  @30688|channel(582,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @53888|channel(,)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: (direct)-> object io  @46320|channel(,)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @53888|channel(,)
				CALL --terminal
				 lead: (direct)-> proxy (anon)  @53888|channel(,)
				 method: (direct)-> method end  @06608|channel(338,3)
			}
		}

		abstract method ~write  @52192|channel(595,11) --fraternal
		 key = sync_channel_writer-0
		 viable = yes
		{

			given
			{
				object deficit  @20688|channel(595,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object io  @19408|channel(595,11) --internal
				 type: (direct)-> type sync_write_only_channel  @30688|channel(582,6)

				object note  @04128|channel(595,11) --internal
				 type: ("string")-> type string  @11552|string(4,6)

				object offset  @20048|channel(595,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object pdata  @30928|channel(595,11) --internal
				 type: ("addr")-> type addr  @44496|addr(4,6)

				object report  @23568|channel(595,11) --internal
				 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)

				object seek  @21008|channel(595,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object size  @20368|channel(595,11) --internal
				 type: ("int")-> type int  @21536|int(6,6)

				object wait  @23248|channel(595,11) --internal
				 type: ("etm")-> type etm  @17984|etm(5,6)
			}

			BLOCK --domain
			{
				MAKE
				 proxy: (direct)-> proxy (anon)  @13808|channel(597,6)
				 type: ("channel")-> type channel  @09248|channel(193,6)
				 permission: [init]
				TRANSLATE --base
				 lead: ("io")-> object io  @19408|channel(595,11)
				 method: (direct)-> method $18<19>( as_base<channel> )  @27792|$appendix(,)
				 result: (direct)-> proxy (anon)  @13808|channel(597,6)
				MAKE
				 literal: (direct)-> literal (anon)  @04448|channel(,) --'w'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				MAKE
				 object: (direct)-> object (anon)  @63200|channel(597,23)
				 type: ("ascii")-> type ascii  @19552|ascii(5,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @63200|channel(597,23)
				 method: ("begin")-> method begin  @25872|ascii(108,3)
				 input: (direct)-> literal (anon)  @04448|channel(,)
				CALL
				 lead: (direct)-> proxy (anon)  @13808|channel(597,6)
				 method: ("execute_sync")-> method execute_sync  @14512|channel(285,3)
				 input: ("wait")-> object wait  @23248|channel(595,11)
				 input: (direct)-> object (anon)  @63200|channel(597,23)
				 input: ("seek")-> object seek  @21008|channel(595,11)
				 input: ("pdata")-> object pdata  @30928|channel(595,11)
				 input: ("offset")-> object offset  @20048|channel(595,11)
				 input: ("size")-> object size  @20368|channel(595,11)
				 output: ("deficit")-> object deficit  @20688|channel(595,11)
				 output: ("report")-> object report  @23568|channel(595,11)
				 output: ("note")-> object note  @04128|channel(595,11)
			}
		}
	}

	subroutine update_mediator  @39360|channel(148,2) --internal
	 viable = yes
	{

		given
		{
			object action  @57488|channel(148,2) --internal
			 type: ("ascii")-> type ascii  @19552|ascii(5,6)

			object deficit  @62928|channel(148,2) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object med  @37776|channel(148,2) --internal
			 type: ("mediator")-> type mediator  @22304|mediator(21,6)

			object offset  @64528|channel(148,2) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object pdata  @61648|channel(148,2) --internal
			 type: ("addr")-> type addr  @44496|addr(4,6)

			object size  @63248|channel(148,2) --internal
			 type: ("int")-> type int  @21536|int(6,6)
		}

		BLOCK --domain
		{
			MAKE
			 object: (direct)-> object dsize  @57808|channel(150,3)
			 type: ("int")-> type int  @21536|int(6,6)
			MAKE
			 object: (direct)-> object (anon)  @58128|channel(150,21)
			 type: ("int")-> type int  @21536|int(6,6)
			CALL --fundamental
			 lead: ("offset")-> object offset  @64528|channel(148,2)
			 method: ("add")-> method add  @48656|int(77,3)
			 input: ("size")-> object size  @63248|channel(148,2)
			 output: (direct)-> object (anon)  @58128|channel(150,21)
			CALL --initial, fundamental
			 lead: (direct)-> object dsize  @57808|channel(150,3)
			 method: ("begin")-> method begin  @31840|int(54,3)
			 input: (direct)-> object (anon)  @58128|channel(150,21)
			CALL --fundamental
			 lead: ("med")-> object med  @37776|channel(148,2)
			 method: ("attach")-> method attach  @13248|mediator(321,3)
			 input: ("pdata")-> object pdata  @61648|channel(148,2)
			 input: ("dsize")-> object dsize  @57808|channel(150,3)
			MAKE
			 object: (direct)-> object cp  @60048|channel(152,3)
			 type: ("int")-> type int  @21536|int(6,6)
			CALL --initial, fundamental
			 lead: (direct)-> object cp  @60048|channel(152,3)
			 method: ("begin")-> method begin  @31840|int(54,3)
			 input: ("dsize")-> object dsize  @57808|channel(150,3)
			CALL --fundamental
			 lead: (direct)-> object cp  @60048|channel(152,3)
			 method: ("sub")-> method sub  @46576|int(79,3)
			 input: ("deficit")-> object deficit  @62928|channel(148,2)
			MAKE
			 literal: (direct)-> literal (anon)  @62608|channel(,) --'w'
			 type: ("expr")-> type expr  @18368|expr(5,6)
			MAKE
			 object: (direct)-> object (anon)  @59408|channel(153,9)
			 type: ("ascii")-> type ascii  @19552|ascii(5,6)
			CALL --initial, fundamental
			 lead: (direct)-> object (anon)  @59408|channel(153,9)
			 method: ("begin")-> method begin  @25872|ascii(108,3)
			 input: (direct)-> literal (anon)  @62608|channel(,)
			MAKE
			 object: (direct)-> object (anon)  @61328|channel(153,9)
			 type: ("bool")-> type bool  @19936|bool(5,6)
			CALL --fundamental
			 lead: ("action")-> object action  @57488|channel(148,2)
			 method: ("is_equal?")-> method is_equal?  @30752|ascii(124,3)
			 input: (direct)-> object (anon)  @59408|channel(153,9)
			 output: (direct)-> object (anon)  @61328|channel(153,9)
			IF
			 condition: (direct)-> object (anon)  @61328|channel(153,9)
			{
				true branch: CALL --fundamental
				 lead: ("med")-> object med  @37776|channel(148,2)
				 method: ("set_rp")-> method set_rp  @15328|mediator(336,3)
				 input: ("cp")-> object cp  @60048|channel(152,3)
				false branch: CALL --fundamental
				 lead: ("med")-> object med  @37776|channel(148,2)
				 method: ("set_wp")-> method set_wp  @19904|mediator(353,3)
				 input: ("cp")-> object cp  @60048|channel(152,3)
			}
		}
	}

	subroutine update_mediator_async  @40160|channel(183,12) --external
	 viable = yes
	{

		given
		{
			object id  @22320|channel(183,12) --internal
			 type: ("int")-> type int  @21536|int(6,6)

			object med  @24240|channel(183,12) --internal
			 type: ("mediator")-> type mediator  @22304|mediator(21,6)

			object note  @18800|channel(183,12) --internal
			 type: ("string")-> type string  @11552|string(4,6)

			object preq  @17520|channel(183,12) --internal
			 type: ("addr")-> type addr  @44496|addr(4,6)

			object report  @16880|channel(183,12) --internal
			 type: ("channel_report")-> enum type channel_report  @04112|channel(160,11)
		}

		BLOCK --domain
		{
			MAKE
			 object: (direct)-> object req  @19120|channel(185,27)
			 type: ("request")-> type request  @08864|channel(16,13)
			CALL
			 subroutine: ("restore_request")-> subroutine restore_request  @43760|channel(142,2)
			 input: ("preq")-> object preq  @17520|channel(183,12)
			 output: (direct)-> object req  @19120|channel(185,27)
			MAKE
			 object: (direct)-> object action  @20080|channel(186,20)
			 type: ("ascii")-> type ascii  @19552|ascii(5,6)
			MAKE
			 object: (direct)-> object pdata  @19760|channel(186,34)
			 type: ("addr")-> type addr  @44496|addr(4,6)
			MAKE
			 object: (direct)-> object offset  @17200|channel(186,46)
			 type: ("int")-> type int  @21536|int(6,6)
			MAKE
			 object: (direct)-> object size  @19440|channel(186,58)
			 type: ("int")-> type int  @21536|int(6,6)
			MAKE
			 object: (direct)-> object seek  @17840|channel(186,68)
			 type: ("int")-> type int  @21536|int(6,6)
			CALL
			 lead: ("req")-> object req  @19120|channel(185,27)
			 method: ("get_group1")-> method get_group1  @11184|channel(66,3)
			 output: (direct)-> object action  @20080|channel(186,20)
			 output: (direct)-> object pdata  @19760|channel(186,34)
			 output: (direct)-> object offset  @17200|channel(186,46)
			 output: (direct)-> object size  @19440|channel(186,58)
			 output: (direct)-> object seek  @17840|channel(186,68)
			 output: ("id")-> object id  @22320|channel(183,12)
			MAKE
			 object: (direct)-> object deficit  @23920|channel(187,20)
			 type: ("int")-> type int  @21536|int(6,6)
			CALL
			 lead: ("req")-> object req  @19120|channel(185,27)
			 method: ("get_group2")-> method get_group2  @12848|channel(77,3)
			 output: (direct)-> object deficit  @23920|channel(187,20)
			 output: ("report")-> object report  @16880|channel(183,12)
			 output: ("note")-> object note  @18800|channel(183,12)
			CALL
			 subroutine: ("update_mediator")-> subroutine update_mediator  @39360|channel(148,2)
			 input: ("med")-> object med  @24240|channel(183,12)
			 input: ("pdata")-> object pdata  @19760|channel(186,34)
			 input: ("offset")-> object offset  @17200|channel(186,46)
			 input: ("size")-> object size  @19440|channel(186,58)
			 input: ("deficit")-> object deficit  @23920|channel(187,20)
			 input: ("action")-> object action  @20080|channel(186,20)
		}
	}

	common
	{
		subroutine $start1  @32016|channel(,) --internal
		 viable = yes
		{

			given
			{
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object sizeof_request  @32672|channel(7,2)
				 type: ("int")-> type int  @21536|int(6,6)
			}
		}

		subroutine $start2  @00416|channel(9,2) --internal
		 viable = yes
		{

			given
			{
			}

			BLOCK --domain
			{
				MAKE
				 object: (direct)-> object (anon)  @01440|channel(11,3)
				 type: ("mediator")-> type mediator  @22304|mediator(21,6)
				CALL --initial, fundamental
				 lead: (direct)-> object (anon)  @01440|channel(11,3)
				 method: ("begin")-> method begin  @60480|mediator(307,3)
				 input: (pending)->
				 input: (pending)->
				MAKE
				 object: (direct)-> object (anon)  @00160|channel(11,35)
				 type: ("request")-> type request  @08864|channel(16,13)
				CALL --initial
				 lead: (direct)-> object (anon)  @00160|channel(11,35)
				 method: ("begin")-> method begin  @15760|channel(28,3)
				MAKE
				 literal: (direct)-> literal (anon)  @04640|channel(,) --'b'
				 type: ("expr")-> type expr  @18368|expr(5,6)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @01440|channel(11,3)
				 method: (direct)-> method $16<17>( fwrite<request> )  @23632|$appendix(,)
				 input: (direct)-> object (anon)  @00160|channel(11,35)
				 input: (direct)-> literal (anon)  @04640|channel(,)
				CALL --fundamental
				 lead: (direct)-> object (anon)  @01440|channel(11,3)
				 method: ("get_size")-> method get_size  @14912|mediator(333,3)
				 output: ("sizeof_request")-> object sizeof_request  @32672|channel(7,2)
			}
		}

		object sizeof_request  @32672|channel(7,2) --internal
		 type: ("int")-> type int  @21536|int(6,6)
	}

}

