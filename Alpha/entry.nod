
page entry in AlphaByNod

type entry [incomplete]
{{
	An entry is a base type for types that represent 
	application entry points.

	:~run defines an application entry point.  Entry points
	are called on concurrently executing threads.

	A primary (or main) thread is started automatically by
	the progam startup routine.  The application can start
	additional threads by calling start_thread<t>.

	Note: <t> is a symbolic type that represents some 
	entry subtype.  start_thread<t> creates an entry point
	object of type <t> then calls :~run. See page thread 
	for details.

	Two signals are used to coordinate execution. :~run
	should indicate active as soon as it's ready to interact
	with other threads and it should continuously monitor 
	stop, returning when indicated.  
	
	Generally, :~run should internally trap disruptions	and
	capture whatever it needs for posterity.

	When the application starts a thread, it can pass a heap
	object of any type using an op<t>. An op<t> is optional, 
	and generally the referenced object is used for inter-
	thread communication. 
	
	Note:  op<object> is null for entries called by the 
	startup routine.
}}
{
	general 
	{
		begin;
	}

	abstract -- recap as [tbd]
	{
		~run [upd]( signal active [upd], signal stop, op<object> [opt] );
	}
}







