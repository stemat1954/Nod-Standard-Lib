page leetcode_reverse in ExamplesByNod

subroutine reverse_nodes ( <int>list list [upd], int k )
{{
	https://leetcode.com/problems/reverse-nodes-in-k-group/

	Reverse nodes in given list k at a time.

	If last group is less than k, they aren't reversed.
}}
{
	if ( "k |<=| one" ) return;

	-- here: k is at least two

	link1 before;  -- before group = front of list 

	loop
	{
		list:go_here( before ):go_more( k )( int k2 );
		if ( "k2 |<| k" ) escape; -- short group

		list:get_current()( link1 last );  -- last in group

		int q:begin( k ):sub( one ); -- move count, at least one
		loop 
		{
			list:go_here( before ):get_next()( link1 nl ):remove_next:go_here( last ):insert( nl );
			if ( q:dec:equal?( zero )( =bool ) ) escape;
		}

		before <= last;
	}
}
